A_CONTROL_MOUSE_X: int
A_CONTROL_MOUSE_Y: int
A_CONTROL_MOVE: int
A_CONTROL_TURN: int
B_CAMERA_DRIVE_SPEED_DOWN: int
B_CAMERA_DRIVE_SPEED_UP: int
B_CAMERA_MOVE_BACKWARD: int
B_CAMERA_MOVE_DOWN: int
B_CAMERA_MOVE_FAST: int
B_CAMERA_MOVE_FORWARD: int
B_CAMERA_MOVE_LEFT: int
B_CAMERA_MOVE_RIGHT: int
B_CAMERA_MOVE_UP: int
B_CAMERA_PAN_DOWN: int
B_CAMERA_PAN_LEFT: int
B_CAMERA_PAN_RIGHT: int
B_CAMERA_PAN_TO_CURSOR: int
B_CAMERA_PAN_UP: int
B_CAMERA_RECENTER: int
B_CAMERA_ROTATE_DOWN: int
B_CAMERA_ROTATE_LEFT: int
B_CAMERA_ROTATE_RIGHT: int
B_CAMERA_ROTATE_UP: int
B_CAMERA_ZOOM_IN: int
B_CAMERA_ZOOM_OUT: int
B_CONTROL_ACTION: int
B_CONTROL_ACTION_MOUSE: int
B_CONTROL_ALWAYS_RUN: int
B_CONTROL_CAMERA_WALK_PAN: int
B_CONTROL_CONSOLE_COMMAND: int
B_CONTROL_CONSUMABLE_JUMP: int
B_CONTROL_DIVE: int
B_CONTROL_DROP: int
B_CONTROL_EMOTE: int
B_CONTROL_ENABLE_OBJECT: int
B_CONTROL_EQUIP: int
B_CONTROL_EXIT_GUI_MODE: int
B_CONTROL_EXIT_MODE: int
B_CONTROL_IGNORE_AVATARS: int
B_CONTROL_JUMP: int
B_CONTROL_LADDER_INVERTED: int
B_CONTROL_MODIFIER_FAST: int
B_CONTROL_MODIFIER_STRAFE: int
B_CONTROL_MOVE_BACKWARD: int
B_CONTROL_MOVE_DOWN: int
B_CONTROL_MOVE_FORWARD: int
B_CONTROL_MOVE_UP: int
B_CONTROL_OPEN_BOOK: int
B_CONTROL_OPEN_KI: int
B_CONTROL_PICK: int
B_CONTROL_REMOVE_INV_OBJECT: int
B_CONTROL_ROTATE_DOWN: int
B_CONTROL_ROTATE_LEFT: int
B_CONTROL_ROTATE_RIGHT: int
B_CONTROL_ROTATE_UP: int
B_CONTROL_SCROLL_DOWN_LIST: int
B_CONTROL_SCROLL_UP_LIST: int
B_CONTROL_SET_EQUIPED_STATE: int
B_CONTROL_SET_INVENTORY_ACTIVE: int
B_CONTROL_SET_INVENTORY_DISACTIVE: int
B_CONTROL_STRAFE_LEFT: int
B_CONTROL_STRAFE_RIGHT: int
B_CONTROL_TOGGLE_PHYSICAL: int
B_CONTROL_TURN_TO: int
B_SET_CONSOLE_MODE: int
B_TOGGLE_DRIVE_MODE: int
KEY_0: int
KEY_1: int
KEY_2: int
KEY_3: int
KEY_4: int
KEY_5: int
KEY_6: int
KEY_7: int
KEY_8: int
KEY_9: int
KEY_A: int
KEY_ALT: int
KEY_B: int
KEY_BACKSLASH: int
KEY_BACKSPACE: int
KEY_C: int
KEY_CAPSLOCK: int
KEY_COMMA: int
KEY_CTRL: int
KEY_D: int
KEY_DASH: int
KEY_DELETE: int
KEY_DOWN: int
KEY_E: int
KEY_END: int
KEY_ENTER: int
KEY_EQUAL: int
KEY_ESCAPE: int
KEY_F: int
KEY_F1: int
KEY_F10: int
KEY_F11: int
KEY_F12: int
KEY_F2: int
KEY_F3: int
KEY_F4: int
KEY_F5: int
KEY_F6: int
KEY_F7: int
KEY_F8: int
KEY_F9: int
KEY_G: int
KEY_H: int
KEY_HOME: int
KEY_I: int
KEY_INSERT: int
KEY_J: int
KEY_K: int
KEY_L: int
KEY_LBRACKET: int
KEY_LEFT: int
KEY_M: int
KEY_N: int
KEY_NUMPAD0: int
KEY_NUMPAD1: int
KEY_NUMPAD2: int
KEY_NUMPAD3: int
KEY_NUMPAD4: int
KEY_NUMPAD5: int
KEY_NUMPAD6: int
KEY_NUMPAD7: int
KEY_NUMPAD8: int
KEY_NUMPAD9: int
KEY_NUMPAD_ADD: int
KEY_NUMPAD_DIVIDE: int
KEY_NUMPAD_MULTIPLY: int
KEY_NUMPAD_PERIOD: int
KEY_NUMPAD_SUBTRACT: int
KEY_O: int
KEY_P: int
KEY_PAGEDOWN: int
KEY_PAGEUP: int
KEY_PAUSE: int
KEY_PERIOD: int
KEY_PRINTSCREEN: int
KEY_Q: int
KEY_QUOTE: int
KEY_R: int
KEY_RBRACKET: int
KEY_RIGHT: int
KEY_S: int
KEY_SEMICOLON: int
KEY_SHIFT: int
KEY_SLASH: int
KEY_SPACE: int
KEY_T: int
KEY_TAB: int
KEY_TILDE: int
KEY_U: int
KEY_UNMAPPED: int
KEY_UP: int
KEY_V: int
KEY_W: int
KEY_X: int
KEY_Y: int
KEY_Z: int
S_CLEAR_LADDER_CONTROL: int
S_DECREASE_MIC_VOL: int
S_INCREASE_MIC_VOL: int
S_PUSH_TO_TALK: int
S_SEARCH_FOR_PICKABLE: int
S_SET_BASIC_MODE: int
S_SET_CONSOLE_HIDDEN: int
S_SET_CONSOLE_SINGLE: int
S_SET_CURSOR_ARROW: int
S_SET_CURSOR_DOWN: int
S_SET_CURSOR_HIDDEN: int
S_SET_CURSOR_LEFT: int
S_SET_CURSOR_POISED: int
S_SET_CURSOR_RIGHT: int
S_SET_CURSOR_UNHIDDEN: int
S_SET_CURSOR_UP: int
S_SET_CURSOR_UPWARD: int
S_SET_FIRST_PERSON_MODE: int
S_SET_FREELOOK: int
S_SET_LADDER_CONTROL: int
S_SET_THIRD_PERSON_MODE: int
S_SET_WALK_BACK_LB_MODE: int
S_SET_WALK_BACK_MODE: int
S_SET_WALK_MODE: int
fmCreate: int
fmRead: int
fmReadWrite: int
fmWrite: int
kBegin: int
kEnd: int
kEventEnd: int
kLoop: int
kReverse: int
kSingleFrameAdjust: int
kSingleFrameEval: int
kStart: int
kStop: int
kTime: int
pvEoa: int
pvHex: int
pvMoul: int
pvPots: int
pvPrime: int
pvUniversal: int
pvUnknown: int

def CleanFileName(*args, **kwargs) -> Any: ...

class hsAffineParts:
    F: Any = ...
    I: Any = ...
    K: Any = ...
    Q: Any = ...
    T: Any = ...
    U: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def reset(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class hsBitVector:
    def __init__(self, *args, **kwargs) -> None: ...
    def clear(self, *args, **kwargs) -> Any: ...
    def compact(self, *args, **kwargs) -> Any: ...
    def getName(self, *args, **kwargs) -> Any: ...
    def getValue(self, *args, **kwargs) -> Any: ...
    def isEmpty(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class hsBounds:
    type: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def ClassName(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class hsBounds3(hsBounds):
    center: Any = ...
    kCenterValid: Any = ...
    kIsSphere: Any = ...
    maxs: Any = ...
    mins: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class hsBounds3Ext(hsBounds3):
    axis0: Any = ...
    axis1: Any = ...
    axis2: Any = ...
    corner: Any = ...
    dist0: Any = ...
    dist1: Any = ...
    dist2: Any = ...
    flags: Any = ...
    kAxisAligned: Any = ...
    kAxisOneZero: Any = ...
    kAxisTwoZero: Any = ...
    kAxisZeroZero: Any = ...
    kDistsSet: Any = ...
    kSphereSet: Any = ...
    radius: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getAxis(self, *args, **kwargs) -> Any: ...
    def getDist(self, *args, **kwargs) -> Any: ...
    def setAxis(self, *args, **kwargs) -> Any: ...
    def setDist(self, *args, **kwargs) -> Any: ...

class hsBoundsOriented(hsBounds):
    center: Any = ...
    centerValid: Any = ...
    planes: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class hsColor32:
    alpha: Any = ...
    blue: Any = ...
    color: Any = ...
    green: Any = ...
    red: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read32(self, *args, **kwargs) -> Any: ...
    def readRGB8(self, *args, **kwargs) -> Any: ...
    def readRGBA8(self, *args, **kwargs) -> Any: ...
    def set(self, *args, **kwargs) -> Any: ...
    def write32(self, *args, **kwargs) -> Any: ...
    def writeRGB8(self, *args, **kwargs) -> Any: ...
    def writeRGBA8(self, *args, **kwargs) -> Any: ...

class hsColorRGBA:
    alpha: Any = ...
    blue: Any = ...
    green: Any = ...
    kBlack: Any = ...
    kBlue: Any = ...
    kCyan: Any = ...
    kGray: Any = ...
    kGreen: Any = ...
    kMagenta: Any = ...
    kNone: Any = ...
    kRed: Any = ...
    kWhite: Any = ...
    kYellow: Any = ...
    red: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def readRGB(self, *args, **kwargs) -> Any: ...
    def set(self, *args, **kwargs) -> Any: ...
    def setFrom(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def writeRGB(self, *args, **kwargs) -> Any: ...

class hsCompressedQuatKey32(hsKeyFrame):
    kCompQuatNukeW: Any = ...
    kCompQuatNukeX: Any = ...
    kCompQuatNukeY: Any = ...
    kCompQuatNukeZ: Any = ...
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def setValue(self, *args, **kwargs) -> Any: ...

class hsCompressedQuatKey64(hsKeyFrame):
    kCompQuatNukeW: Any = ...
    kCompQuatNukeX: Any = ...
    kCompQuatNukeY: Any = ...
    kCompQuatNukeZ: Any = ...
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def setValue(self, *args, **kwargs) -> Any: ...

class hsFileStream(hsStream):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def open(self, *args, **kwargs) -> Any: ...
    def __enter__(self) -> Any: ...
    def __exit__(self, type, value, traceback) -> Any: ...

class hsG3DSMaxKeyFrame(hsKeyFrame):
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsGMatState:
    ZFlags: Any = ...
    blendFlags: Any = ...
    clampFlags: Any = ...
    kAllMiscFlags: Any = ...
    kBlendAdd: Any = ...
    kBlendAddColorTimesAlpha: Any = ...
    kBlendAddSigned: Any = ...
    kBlendAddSigned2X: Any = ...
    kBlendAlpha: Any = ...
    kBlendAlphaAdd: Any = ...
    kBlendAlphaAlways: Any = ...
    kBlendAlphaMult: Any = ...
    kBlendAlphaTestHigh: Any = ...
    kBlendAntiAlias: Any = ...
    kBlendDetail: Any = ...
    kBlendDot3: Any = ...
    kBlendEnvBumpNext: Any = ...
    kBlendInvertAlpha: Any = ...
    kBlendInvertColor: Any = ...
    kBlendInvertFinalAlpha: Any = ...
    kBlendInvertFinalColor: Any = ...
    kBlendInvertVtxAlpha: Any = ...
    kBlendMADD: Any = ...
    kBlendMask: Any = ...
    kBlendMult: Any = ...
    kBlendNoColor: Any = ...
    kBlendNoTexAlpha: Any = ...
    kBlendNoTexColor: Any = ...
    kBlendNoVtxAlpha: Any = ...
    kBlendRevSubtract: Any = ...
    kBlendSubtract: Any = ...
    kBlendTest: Any = ...
    kClampTexture: Any = ...
    kClampTextureU: Any = ...
    kClampTextureV: Any = ...
    kMiscAdjust: Any = ...
    kMiscAdjustCylinder: Any = ...
    kMiscAdjustPlane: Any = ...
    kMiscAdjustSphere: Any = ...
    kMiscBindMask: Any = ...
    kMiscBindNext: Any = ...
    kMiscBindSkip: Any = ...
    kMiscBumpChans: Any = ...
    kMiscBumpDu: Any = ...
    kMiscBumpDv: Any = ...
    kMiscBumpDw: Any = ...
    kMiscBumpLayer: Any = ...
    kMiscCam2Screen: Any = ...
    kMiscDrawAsSplats: Any = ...
    kMiscDrawMeshOutlines: Any = ...
    kMiscLightMap: Any = ...
    kMiscNoShadowAlpha: Any = ...
    kMiscOrthoProjection: Any = ...
    kMiscPerspProjection: Any = ...
    kMiscProjection: Any = ...
    kMiscRestartPassHere: Any = ...
    kMiscTroubledLoner: Any = ...
    kMiscTwoSided: Any = ...
    kMiscUseReflectionXform: Any = ...
    kMiscUseRefractionXform: Any = ...
    kMiscWireFrame: Any = ...
    kShadeBlack: Any = ...
    kShadeEmissive: Any = ...
    kShadeEnvironMap: Any = ...
    kShadeIgnoreVtxIllum: Any = ...
    kShadeInherit: Any = ...
    kShadeNoFog: Any = ...
    kShadeNoProjectors: Any = ...
    kShadeNoShade: Any = ...
    kShadeReallyNoFog: Any = ...
    kShadeSoftShadow: Any = ...
    kShadeSpecular: Any = ...
    kShadeSpecularAlpha: Any = ...
    kShadeSpecularColor: Any = ...
    kShadeSpecularHighlight: Any = ...
    kShadeVertColShade: Any = ...
    kShadeVertexShade: Any = ...
    kShadeWhite: Any = ...
    kZClearZ: Any = ...
    kZIncLayer: Any = ...
    kZLODBias: Any = ...
    kZMask: Any = ...
    kZNoZRead: Any = ...
    kZNoZWrite: Any = ...
    miscFlags: Any = ...
    shadeFlags: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class hsGMaterial(plSynchedObject):
    compFlags: Any = ...
    kCompAdjusted: Any = ...
    kCompDecal: Any = ...
    kCompDrawAsSplats: Any = ...
    kCompDynamic: Any = ...
    kCompEnvironMap: Any = ...
    kCompIsEmissive: Any = ...
    kCompIsLightMapped: Any = ...
    kCompNeedsBlendChannel: Any = ...
    kCompNoSoftShadow: Any = ...
    kCompProjectOnto: Any = ...
    kCompShaded: Any = ...
    kCompSoftShadow: Any = ...
    kCompSpecular: Any = ...
    kCompTwoSided: Any = ...
    layers: Any = ...
    loadFlags: Any = ...
    piggyBacks: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addLayer(self, *args, **kwargs) -> Any: ...
    def addPiggyBack(self, *args, **kwargs) -> Any: ...
    def clearLayers(self, *args, **kwargs) -> Any: ...
    def clearPiggyBacks(self, *args, **kwargs) -> Any: ...
    def delLayer(self, *args, **kwargs) -> Any: ...
    def delPiggyBack(self, *args, **kwargs) -> Any: ...

class hsKeyFrame:
    frame: Any = ...
    frameTime: Any = ...
    k3dsMaxKeyFrame: Any = ...
    kBezPoint3KeyFrame: Any = ...
    kBezScalarKeyFrame: Any = ...
    kBezScaleKeyFrame: Any = ...
    kCompressedQuatKeyFrame32: Any = ...
    kCompressedQuatKeyFrame64: Any = ...
    kMatrix33KeyFrame: Any = ...
    kMatrix44KeyFrame: Any = ...
    kPoint3KeyFrame: Any = ...
    kQuatKeyFrame: Any = ...
    kScalarKeyFrame: Any = ...
    kScaleKeyFrame: Any = ...
    kUnknownKeyFrame: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class hsKeyedObject(plCreatable):
    key: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def orderAfter(self, *args, **kwargs) -> Any: ...

class hsKeyedObjectStub(plCreatable):
    stub: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsMatrix33:
    mat: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class hsMatrix33Key(hsKeyFrame):
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsMatrix44:
    glMat: Any = ...
    kRight: Any = ...
    kUp: Any = ...
    kView: Any = ...
    mat: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def Identity(self, *args, **kwargs) -> Any: ...
    def RotateMat(self, *args, **kwargs) -> Any: ...
    def ScaleMat(self, *args, **kwargs) -> Any: ...
    def TranslateMat(self, *args, **kwargs) -> Any: ...
    def inverse(self, *args, **kwargs) -> Any: ...
    def isIdentity(self, *args, **kwargs) -> Any: ...
    def multPoint(self, *args, **kwargs) -> Any: ...
    def multVector(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def rotate(self, *args, **kwargs) -> Any: ...
    def scale(self, *args, **kwargs) -> Any: ...
    def setRotate(self, *args, **kwargs) -> Any: ...
    def setScale(self, *args, **kwargs) -> Any: ...
    def setTranslate(self, *args, **kwargs) -> Any: ...
    def translate(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __mul__(self, other) -> Any: ...
    def __rmul__(self, other) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class hsMatrix44Key(hsKeyFrame):
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsPlane3:
    W: Any = ...
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class hsPoint3Key(hsKeyFrame):
    inTan: Any = ...
    outTan: Any = ...
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsQuat:
    W: Any = ...
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def Identity(self, *args, **kwargs) -> Any: ...
    def conjugate(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __abs__(self) -> Any: ...
    def __add__(self, other) -> Any: ...
    def __bool__(self) -> Any: ...
    def __mul__(self, other) -> Any: ...
    def __neg__(self) -> Any: ...
    def __pos__(self) -> Any: ...
    def __radd__(self, other) -> Any: ...
    def __rmul__(self, other) -> Any: ...
    def __rsub__(self, other) -> Any: ...
    def __sub__(self, other) -> Any: ...

class hsQuatKey(hsKeyFrame):
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsRAMStream(hsStream):
    buffer: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def resize(self, *args, **kwargs) -> Any: ...

class hsScalarKey(hsKeyFrame):
    inTan: Any = ...
    outTan: Any = ...
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsScaleKey(hsKeyFrame):
    inTan: Any = ...
    outTan: Any = ...
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class hsStream:
    pos: Any = ...
    size: Any = ...
    version: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def close(self, *args, **kwargs) -> Any: ...
    def eof(self, *args, **kwargs) -> Any: ...
    def fastForward(self, *args, **kwargs) -> Any: ...
    def flush(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def readBool(self, *args, **kwargs) -> Any: ...
    def readByte(self, *args, **kwargs) -> Any: ...
    def readDouble(self, *args, **kwargs) -> Any: ...
    def readFloat(self, *args, **kwargs) -> Any: ...
    def readInt(self, *args, **kwargs) -> Any: ...
    def readLine(self, *args, **kwargs) -> Any: ...
    def readSafeStr(self, *args, **kwargs) -> Any: ...
    def readSafeWStr(self, *args, **kwargs) -> Any: ...
    def readShort(self, *args, **kwargs) -> Any: ...
    def rewind(self, *args, **kwargs) -> Any: ...
    def seek(self, *args, **kwargs) -> Any: ...
    def skip(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def writeBool(self, *args, **kwargs) -> Any: ...
    def writeByte(self, *args, **kwargs) -> Any: ...
    def writeDouble(self, *args, **kwargs) -> Any: ...
    def writeFloat(self, *args, **kwargs) -> Any: ...
    def writeFrom(self, *args, **kwargs) -> Any: ...
    def writeInt(self, *args, **kwargs) -> Any: ...
    def writeLine(self, *args, **kwargs) -> Any: ...
    def writeSafeStr(self, *args, **kwargs) -> Any: ...
    def writeSafeWStr(self, *args, **kwargs) -> Any: ...
    def writeShort(self, *args, **kwargs) -> Any: ...

class hsVector3:
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def crossP(self, *args, **kwargs) -> Any: ...
    def dotP(self, *args, **kwargs) -> Any: ...
    def magnitude(self, *args, **kwargs) -> Any: ...
    def normalize(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __abs__(self) -> Any: ...
    def __add__(self, other) -> Any: ...
    def __bool__(self) -> Any: ...
    def __mul__(self, other) -> Any: ...
    def __neg__(self) -> Any: ...
    def __pos__(self) -> Any: ...
    def __radd__(self, other) -> Any: ...
    def __rmul__(self, other) -> Any: ...
    def __rsub__(self, other) -> Any: ...
    def __sub__(self, other) -> Any: ...

class pfGUIButtonMod(pfGUIControlMod):
    animName: Any = ...
    animationKeys: Any = ...
    draggable: Any = ...
    kNotifyOnDown: Any = ...
    kNotifyOnUp: Any = ...
    kNotifyOnUpAndDown: Any = ...
    mouseOverAnimName: Any = ...
    mouseOverKeys: Any = ...
    notifyType: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addAnimationKey(self, *args, **kwargs) -> Any: ...
    def addMouseOverKey(self, *args, **kwargs) -> Any: ...
    def clearAnimationKeys(self, *args, **kwargs) -> Any: ...
    def clearMouseOverKeys(self, *args, **kwargs) -> Any: ...
    def delAnimationKey(self, *args, **kwargs) -> Any: ...
    def delMouseOverKey(self, *args, **kwargs) -> Any: ...

class pfGUICheckBoxCtrl(pfGUIControlMod):
    animKeys: Any = ...
    animName: Any = ...
    checked: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addAnimKey(self, *args, **kwargs) -> Any: ...
    def clearAnimKeys(self, *args, **kwargs) -> Any: ...
    def delAnimKey(self, *args, **kwargs) -> Any: ...

class pfGUIClickMapCtrl(pfGUIControlMod):
    kReportDragging: Any = ...
    kReportHovering: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUICloseDlgProc(pfGUICtrlProcWriteableObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIColorScheme:
    backColor: Any = ...
    fontFace: Any = ...
    fontFlags: Any = ...
    fontSize: Any = ...
    foreColor: Any = ...
    kFontBold: Any = ...
    kFontItalic: Any = ...
    kFontShadowed: Any = ...
    selBackColor: Any = ...
    selForeColor: Any = ...
    transparent: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIConsoleCmdProc(pfGUICtrlProcWriteableObject):
    command: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIControlMod(plSingleModifier):
    colorScheme: Any = ...
    dynTextLayer: Any = ...
    dynTextMap: Any = ...
    handler: Any = ...
    kBetterHitTesting: Any = ...
    kHasProxy: Any = ...
    kInheritProcFromDlg: Any = ...
    kIntangible: Any = ...
    kScaleTextWithResolution: Any = ...
    kTakesSpecialKeys: Any = ...
    kWantsInterest: Any = ...
    kXparentBgnd: Any = ...
    proxy: Any = ...
    skin: Any = ...
    soundIndices: Any = ...
    tagID: Any = ...
    visible: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def clearSoundIndices(self, *args, **kwargs) -> Any: ...

class pfGUICtrlProcObject:
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUICtrlProcWriteableObject(pfGUICtrlProcObject):
    kCloseDlg: Any = ...
    kConsoleCmd: Any = ...
    kNull: Any = ...
    kPythonScript: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def Read(self, *args, **kwargs) -> Any: ...
    def Write(self, *args, **kwargs) -> Any: ...

class pfGUIDialogMod(plSingleModifier):
    colorScheme: Any = ...
    controls: Any = ...
    name: Any = ...
    procReceiver: Any = ...
    renderMod: Any = ...
    sceneNode: Any = ...
    tagID: Any = ...
    version: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addControl(self, *args, **kwargs) -> Any: ...
    def clearControls(self, *args, **kwargs) -> Any: ...
    def delControl(self, *args, **kwargs) -> Any: ...

class pfGUIDialogProc(pfGUICtrlProcObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIDragBarCtrl(pfGUIControlMod):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIDraggableMod(pfGUIControlMod):
    kAlwaysSnapBackToStart: Any = ...
    kHideCursorWhileDragging: Any = ...
    kReportDragging: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIDynDisplayCtrl(pfGUIControlMod):
    layers: Any = ...
    materials: Any = ...
    textMaps: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addLayer(self, *args, **kwargs) -> Any: ...
    def addMaterial(self, *args, **kwargs) -> Any: ...
    def addTextMap(self, *args, **kwargs) -> Any: ...
    def clearLayers(self, *args, **kwargs) -> Any: ...
    def clearMaterials(self, *args, **kwargs) -> Any: ...
    def clearTextMaps(self, *args, **kwargs) -> Any: ...
    def delLayer(self, *args, **kwargs) -> Any: ...
    def delMaterial(self, *args, **kwargs) -> Any: ...
    def delTextMap(self, *args, **kwargs) -> Any: ...

class pfGUIEditBoxMod(pfGUIControlMod):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIKnobCtrl(pfGUIValueCtrl):
    animEndPos: Any = ...
    animName: Any = ...
    animStartPos: Any = ...
    animationKeys: Any = ...
    kLeftRightOrientation: Any = ...
    kMapToAnimationRange: Any = ...
    kMapToScreenRange: Any = ...
    kReverseValues: Any = ...
    kTriggerOnlyOnMouseUp: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addAnimationKey(self, *args, **kwargs) -> Any: ...
    def clearAnimationKeys(self, *args, **kwargs) -> Any: ...
    def delAnimationKey(self, *args, **kwargs) -> Any: ...

class pfGUIListBoxMod(pfGUIControlMod):
    kAllowMousePassThrough: Any = ...
    kAllowMultipleElementsPerRow: Any = ...
    kDisableKeyActions: Any = ...
    kDisableSelection: Any = ...
    kDragAndDropCapable: Any = ...
    kForbidNoSelection: Any = ...
    kGrowLeavesAndProcessOxygen: Any = ...
    kHandsOffMultiSelect: Any = ...
    kScrollLeftToRight: Any = ...
    kSingleSelect: Any = ...
    scrollCtrl: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIMenuItem(pfGUIButtonMod):
    kDrawSubMenuArrow: Any = ...
    kReportHovers: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIMultiLineEditCtrl(pfGUIControlMod):
    scrollCtrl: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIPopUpMenu(pfGUIDialogMod):
    alignment: Any = ...
    kAlignDownLeft: Any = ...
    kAlignDownRight: Any = ...
    kAlignUpLeft: Any = ...
    kAlignUpRight: Any = ...
    kModalOutsideMenus: Any = ...
    kOpenSubMenusOnHover: Any = ...
    kScaleWithResolution: Any = ...
    kStayOpenAfterClick: Any = ...
    margin: Any = ...
    originAnchor: Any = ...
    originContext: Any = ...
    skin: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIProgressCtrl(pfGUIValueCtrl):
    animKeys: Any = ...
    animName: Any = ...
    kLeftRightOrientation: Any = ...
    kMapToAnimationRange: Any = ...
    kMapToScreenRange: Any = ...
    kReverseValues: Any = ...
    kTriggerOnlyOnMouseUp: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addAnimKey(self, *args, **kwargs) -> Any: ...
    def clearAnimKeys(self, *args, **kwargs) -> Any: ...
    def delAnimKey(self, *args, **kwargs) -> Any: ...

class pfGUIPythonScriptProc(pfGUICtrlProcWriteableObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIRadioGroupCtrl(pfGUIControlMod):
    controls: Any = ...
    defaultValue: Any = ...
    kAllowNoSelection: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addControl(self, *args, **kwargs) -> Any: ...
    def clearControls(self, *args, **kwargs) -> Any: ...
    def delControl(self, *args, **kwargs) -> Any: ...

class pfGUISkin(hsKeyedObject):
    borderMargin: Any = ...
    itemMargin: Any = ...
    kBottomSpan: Any = ...
    kLeftSpan: Any = ...
    kLowerLeftCorner: Any = ...
    kLowerRightCorner: Any = ...
    kMiddleFill: Any = ...
    kRightSpan: Any = ...
    kSelectedFill: Any = ...
    kSelectedSubMenuArrow: Any = ...
    kSubMenuArrow: Any = ...
    kTopSpan: Any = ...
    kTreeButtonClosed: Any = ...
    kTreeButtonOpen: Any = ...
    kUpLeftCorner: Any = ...
    kUpRightCorner: Any = ...
    texture: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUITextBoxMod(pfGUIControlMod):
    kCenterJustify: Any = ...
    kRightJustify: Any = ...
    localizationPath: Any = ...
    text: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIUpDownPairMod(pfGUIValueCtrl):
    downControl: Any = ...
    upControl: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfGUIValueCtrl(pfGUIControlMod):
    max: Any = ...
    min: Any = ...
    step: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class pfPrcHelper:
    kExcludeTextureData: Any = ...
    kExcludeVertexData: Any = ...
    kNone: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class pl2WayWinAudible(plWinAudible):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAGAnim(plSynchedObject):
    applicators: Any = ...
    blend: Any = ...
    end: Any = ...
    kBodyFull: Any = ...
    kBodyLower: Any = ...
    kBodyMax: Any = ...
    kBodyUnknown: Any = ...
    kBodyUpper: Any = ...
    name: Any = ...
    start: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addApplicator(self, *args, **kwargs) -> Any: ...
    def clearApplicators(self, *args, **kwargs) -> Any: ...
    def delApplicator(self, *args, **kwargs) -> Any: ...

class plAGAnimBink(plATCAnim):
    binkFilename: Any = ...
    sgtFilename: Any = ...
    subtitleId: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAGApplicator(plCreatable):
    channel: Any = ...
    channelName: Any = ...
    enabled: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAGChannel(plCreatable):
    name: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAGMasterMod(plSingleModifier):
    eoaKeys: Any = ...
    groupName: Any = ...
    isGroupMaster: Any = ...
    isGrouped: Any = ...
    msgForwarder: Any = ...
    privateAnims: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addEoaKey(self, *args, **kwargs) -> Any: ...
    def addPrivateAnim(self, *args, **kwargs) -> Any: ...
    def clearEoaKeys(self, *args, **kwargs) -> Any: ...
    def clearPrivateAnims(self, *args, **kwargs) -> Any: ...
    def delEoaKey(self, *args, **kwargs) -> Any: ...
    def delPrivateAnim(self, *args, **kwargs) -> Any: ...

class plAGModifier(plModifier):
    autoApply: Any = ...
    channelName: Any = ...
    enabled: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plANDConditionalObject(plConditionalObject):
    children: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addChild(self, *args, **kwargs) -> Any: ...
    def clearChildren(self, *args, **kwargs) -> Any: ...
    def delChild(self, *args, **kwargs) -> Any: ...

class plATCAnim(plAGAnim):
    autoStart: Any = ...
    easeInLength: Any = ...
    easeInMax: Any = ...
    easeInMin: Any = ...
    easeInType: Any = ...
    easeOutLength: Any = ...
    easeOutMax: Any = ...
    easeOutMin: Any = ...
    easeOutType: Any = ...
    initial: Any = ...
    loop: Any = ...
    loopEnd: Any = ...
    loopStart: Any = ...
    loops: Any = ...
    markers: Any = ...
    stops: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def clearLoops(self, *args, **kwargs) -> Any: ...
    def clearMarkers(self, *args, **kwargs) -> Any: ...
    def setLoop(self, *args, **kwargs) -> Any: ...
    def setMarker(self, *args, **kwargs) -> Any: ...

class plATCChannel(plScalarChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plATCEaseCurve(plCreatable):
    beginWorldTime: Any = ...
    length: Any = ...
    maxLength: Any = ...
    minLength: Any = ...
    speed: Any = ...
    startSpeed: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plActivatorActivatorConditionalObject(plActivatorConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plActivatorConditionalObject(plConditionalObject):
    activators: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addActivator(self, *args, **kwargs) -> Any: ...
    def clearActivators(self, *args, **kwargs) -> Any: ...
    def delActivator(self, *args, **kwargs) -> Any: ...

class plActivePrintShape(plPrintShape):
    decalMgrs: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addDecalMgr(self, *args, **kwargs) -> Any: ...
    def clearDecalMgrs(self, *args, **kwargs) -> Any: ...
    def delDecalMgr(self, *args, **kwargs) -> Any: ...

class plAgeGlobalAnim(plAGAnim):
    globalVarName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAgeInfo:
    dayLength: Any = ...
    kCommonPages: Any = ...
    kFlagIsLocalOnly: Any = ...
    kFlagIsVolatile: Any = ...
    kFlagLoadIfSDLPresent: Any = ...
    kFlagPreventAutoLoad: Any = ...
    kNumCommonPages: Any = ...
    kPageGlobal: Any = ...
    kPageTextures: Any = ...
    lingerTime: Any = ...
    maxCapacity: Any = ...
    name: Any = ...
    releaseVersion: Any = ...
    seqPrefix: Any = ...
    startDateTime: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def addPage(self, *args, **kwargs) -> Any: ...
    def getCommonPage(self, *args, **kwargs) -> Any: ...
    def getCommonPageFilename(self, *args, **kwargs) -> Any: ...
    def getCommonPageLoc(self, *args, **kwargs) -> Any: ...
    def getNumCommonPages(self, *args, **kwargs) -> Any: ...
    def getNumPages(self, *args, **kwargs) -> Any: ...
    def getPage(self, *args, **kwargs) -> Any: ...
    def getPageFilename(self, *args, **kwargs) -> Any: ...
    def getPageLoc(self, *args, **kwargs) -> Any: ...
    def readFromFile(self, *args, **kwargs) -> Any: ...
    def readFromStream(self, *args, **kwargs) -> Any: ...
    def setPage(self, *args, **kwargs) -> Any: ...
    def writeToFile(self, *args, **kwargs) -> Any: ...
    def writeToStream(self, *args, **kwargs) -> Any: ...

class plAgeInfoStruct(plCreatable):
    ageFilename: Any = ...
    ageInstanceGuid: Any = ...
    ageInstanceName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAgeLinkEffects:
    linkInAnimName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAgeLinkStruct(plCreatable):
    ageInfo: Any = ...
    kBasicLink: Any = ...
    kChildAgeBook: Any = ...
    kOriginalBook: Any = ...
    kOwnedBook: Any = ...
    kSubAgeBook: Any = ...
    kVisitBook: Any = ...
    linkingRules: Any = ...
    parentAgeFilename: Any = ...
    spawnPoint: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAnimCmdMsg(plMessageWithCallbacks):
    animName: Any = ...
    begin: Any = ...
    end: Any = ...
    kAddCallbacks: Any = ...
    kContinue: Any = ...
    kFastForward: Any = ...
    kGoToBegin: Any = ...
    kGoToEnd: Any = ...
    kGoToLoopBegin: Any = ...
    kGoToLoopEnd: Any = ...
    kGoToPercent: Any = ...
    kGoToTime: Any = ...
    kIncrementBackward: Any = ...
    kIncrementForward: Any = ...
    kNumCmds: Any = ...
    kPlayToPercentage: Any = ...
    kPlayToTime: Any = ...
    kRemoveCallbacks: Any = ...
    kRunBackward: Any = ...
    kRunForward: Any = ...
    kSetBackwards: Any = ...
    kSetBegin: Any = ...
    kSetEnd: Any = ...
    kSetForwards: Any = ...
    kSetLoopBegin: Any = ...
    kSetLoopEnd: Any = ...
    kSetLooping: Any = ...
    kSetSpeed: Any = ...
    kStop: Any = ...
    kToggleState: Any = ...
    kUnSetLooping: Any = ...
    loopBegin: Any = ...
    loopEnd: Any = ...
    loopName: Any = ...
    speed: Any = ...
    speedChangeRate: Any = ...
    time: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getCmd(self, *args, **kwargs) -> Any: ...
    def setCmd(self, *args, **kwargs) -> Any: ...

class plAnimPath(plCreatable):
    affineParts: Any = ...
    controller: Any = ...
    flags: Any = ...
    kCalcPosOnly: Any = ...
    kFarthest: Any = ...
    kFavorBwdSearch: Any = ...
    kFavorFwdSearch: Any = ...
    kIncrement: Any = ...
    kNone: Any = ...
    kWrap: Any = ...
    length: Any = ...
    localToWorld: Any = ...
    minDistSq: Any = ...
    worldToLocal: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAnimStage(plCreatable):
    advanceTo: Any = ...
    advanceType: Any = ...
    animName: Any = ...
    backType: Any = ...
    forwardType: Any = ...
    kAdvanceAuto: Any = ...
    kAdvanceMax: Any = ...
    kAdvanceNone: Any = ...
    kAdvanceOnAnyKey: Any = ...
    kAdvanceOnMove: Any = ...
    kNotifyAdvance: Any = ...
    kNotifyEnter: Any = ...
    kNotifyLoop: Any = ...
    kNotifyRegress: Any = ...
    kPlayAuto: Any = ...
    kPlayKey: Any = ...
    kPlayMax: Any = ...
    kPlayNone: Any = ...
    loops: Any = ...
    notify: Any = ...
    regressTo: Any = ...
    regressType: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plAnimTimeConvert(plCreatable):
    begin: Any = ...
    callbacks: Any = ...
    currentAnimTime: Any = ...
    easeInCurve: Any = ...
    easeOutCurve: Any = ...
    end: Any = ...
    flags: Any = ...
    kBackwards: Any = ...
    kEasingIn: Any = ...
    kFlagsMask: Any = ...
    kForcedMove: Any = ...
    kLoop: Any = ...
    kNeedsReset: Any = ...
    kNoCallbacks: Any = ...
    kNone: Any = ...
    kStopped: Any = ...
    kWrap: Any = ...
    lastEvalWorldTime: Any = ...
    loopBegin: Any = ...
    loopEnd: Any = ...
    speed: Any = ...
    speedEaseCurve: Any = ...
    stopPoints: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addCallback(self, *args, **kwargs) -> Any: ...
    def clearCallbacks(self, *args, **kwargs) -> Any: ...
    def delCallback(self, *args, **kwargs) -> Any: ...

class plAnimationEventConditionalObject(plConditionalObject):
    action: Any = ...
    target: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plArmatureEffectStateMsg(plMessage):
    addSurface: Any = ...
    surface: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAudible(hsKeyedObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAudibleNull(plAudible):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAudioInterface(plObjInterface):
    audible: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plAvLadderMod(plSingleModifier):
    enabled: Any = ...
    goingUp: Any = ...
    kBig: Any = ...
    kFourFeet: Any = ...
    kTwoFeet: Any = ...
    ladderView: Any = ...
    loops: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plBitmap(hsKeyedObject):
    ARGBType: Any = ...
    BPP: Any = ...
    DXBlockSize: Any = ...
    DXCompression: Any = ...
    compressionType: Any = ...
    flags: Any = ...
    kAInten88: Any = ...
    kAlphaBitFlag: Any = ...
    kAlphaChannelFlag: Any = ...
    kBumpEnvMap: Any = ...
    kDXT1: Any = ...
    kDXT3: Any = ...
    kDXT5: Any = ...
    kDXTError: Any = ...
    kDirectSpace: Any = ...
    kDirectXCompression: Any = ...
    kDontThrowAwayImage: Any = ...
    kForce32Bit: Any = ...
    kForceNonCompressed: Any = ...
    kForceOneMipLevel: Any = ...
    kForceRewrite: Any = ...
    kGraySpace: Any = ...
    kHalfSize: Any = ...
    kIndexSpace: Any = ...
    kInten8: Any = ...
    kIntensityMap: Any = ...
    kIsOffscreen: Any = ...
    kIsOrtho: Any = ...
    kIsProjected: Any = ...
    kIsTexture: Any = ...
    kJPEGCompression: Any = ...
    kNoMaxSize: Any = ...
    kNoSpace: Any = ...
    kPNGCompression: Any = ...
    kRGB1555: Any = ...
    kRGB4444: Any = ...
    kRGB8888: Any = ...
    kUncompressed: Any = ...
    kUserOwnsBitmap: Any = ...
    modTime: Any = ...
    space: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def setConfig(self, *args, **kwargs) -> Any: ...

class plBoundInterface(plObjInterface):
    bounds: Any = ...
    kDisable: Any = ...
    kNumProps: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraBrain(hsKeyedObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraBrain1(plCameraBrain):
    acceleration: Any = ...
    deceleration: Any = ...
    kAnimateFOV: Any = ...
    kBeginFalling: Any = ...
    kCircleTarget: Any = ...
    kCutPOA: Any = ...
    kCutPOAOnce: Any = ...
    kCutPOAWhilePan: Any = ...
    kCutPos: Any = ...
    kCutPosOnce: Any = ...
    kCutPosWhilePan: Any = ...
    kFalling: Any = ...
    kFallingStopped: Any = ...
    kFollowLocalAvatar: Any = ...
    kIgnoreSubworldMovement: Any = ...
    kIsTransitionCamera: Any = ...
    kMaintainLOS: Any = ...
    kNeverAnimateFOV: Any = ...
    kNonPhys: Any = ...
    kPanicVelocity: Any = ...
    kRailComponent: Any = ...
    kRunning: Any = ...
    kSpeedUpWhenRunning: Any = ...
    kSubject: Any = ...
    kVerticalWhenFalling: Any = ...
    kWorldspacePOA: Any = ...
    kWorldspacePos: Any = ...
    kZoomEnabled: Any = ...
    panSpeed: Any = ...
    poaAcceleration: Any = ...
    poaDeceleration: Any = ...
    poaOffset: Any = ...
    poaVelocity: Any = ...
    rail: Any = ...
    subject: Any = ...
    velocity: Any = ...
    xPanLimit: Any = ...
    zPanLimit: Any = ...
    zoomMax: Any = ...
    zoomMin: Any = ...
    zoomRate: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getEoAFlags(self, *args, **kwargs) -> Any: ...
    def getFlags(self, *args, **kwargs) -> Any: ...
    def setEoAFlags(self, *args, **kwargs) -> Any: ...
    def setFlags(self, *args, **kwargs) -> Any: ...

class plCameraBrain1_Avatar(plCameraBrain1):
    offset: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraBrain1_Circle(plCameraBrain1_Fixed):
    center: Any = ...
    centerObject: Any = ...
    cirPerSec: Any = ...
    circleFlags: Any = ...
    kAbsoluteLag: Any = ...
    kCircleLocalAvatar: Any = ...
    kFarthest: Any = ...
    kHasCenterObject: Any = ...
    kLagged: Any = ...
    kPOAObject: Any = ...
    kTargetted: Any = ...
    poaObject: Any = ...
    radius: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraBrain1_FirstPerson(plCameraBrain1_Avatar):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraBrain1_Fixed(plCameraBrain1):
    targetPoint: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraConfig:
    accel: Any = ...
    decel: Any = ...
    fovH: Any = ...
    fovW: Any = ...
    fpAccel: Any = ...
    fpDecel: Any = ...
    fpVel: Any = ...
    offset: Any = ...
    vel: Any = ...
    worldspace: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCameraModifier(plSingleModifier):
    CamTrans: Any = ...
    animated: Any = ...
    at: Any = ...
    brain: Any = ...
    fovH: Any = ...
    fovInstructions: Any = ...
    fovW: Any = ...
    from: Any = ...
    messageQueue: Any = ...
    resetAnimOnPop: Any = ...
    startAnimOnPush: Any = ...
    stopAnimOnPop: Any = ...
    trans: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addFOVInstruction(self, *args, **kwargs) -> Any: ...
    def addMessage(self, *args, **kwargs) -> Any: ...
    def addTrans(self, *args, **kwargs) -> Any: ...
    def clearFOVInstructions(self, *args, **kwargs) -> Any: ...
    def clearMessageQueue(self, *args, **kwargs) -> Any: ...
    def clearTrans(self, *args, **kwargs) -> Any: ...
    def delFOVInstruction(self, *args, **kwargs) -> Any: ...
    def delMessage(self, *args, **kwargs) -> Any: ...
    def delTrans(self, *args, **kwargs) -> Any: ...

class plCameraMsg(plMessage):
    activated: Any = ...
    config: Any = ...
    kAddFOVKeyFrame: Any = ...
    kCameraMod: Any = ...
    kChangeParams: Any = ...
    kCreateNewDefaultCam: Any = ...
    kCut: Any = ...
    kEntering: Any = ...
    kFollowLocalPlayer: Any = ...
    kNonPhysOff: Any = ...
    kNonPhysOn: Any = ...
    kNumCmds: Any = ...
    kPopt: Any = ...
    kPush: Any = ...
    kPythonOverridePop: Any = ...
    kPythonOverridePush: Any = ...
    kPythonOverridePushCut: Any = ...
    kPythonSetFirstPersonOverrideEnable: Any = ...
    kPythonUndoFirstPerson: Any = ...
    kRegionPopCamera: Any = ...
    kRegionPopPOA: Any = ...
    kRegionPushCamera: Any = ...
    kRegionPushPOA: Any = ...
    kResetOnEnter: Any = ...
    kResetOnExit: Any = ...
    kResetPanning: Any = ...
    kResponderSetThirdPerson: Any = ...
    kResponderTrigger: Any = ...
    kResponderUndoThirdPerson: Any = ...
    kSetAnimated: Any = ...
    kSetAsPrimary: Any = ...
    kSetFOV: Any = ...
    kSetSubject: Any = ...
    kStartZoomIn: Any = ...
    kStartZoomOut: Any = ...
    kStopZoom: Any = ...
    kTransitionTo: Any = ...
    kUpdateCameras: Any = ...
    kWorldspace: Any = ...
    newCam: Any = ...
    transTime: Any = ...
    triggerer: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getCmd(self, *args, **kwargs) -> Any: ...
    def setCmd(self, *args, **kwargs) -> Any: ...

class plCameraRegionDetector(plObjectInVolumeDetector):
    messages: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addMessage(self, *args, **kwargs) -> Any: ...
    def clearMessages(self, *args, **kwargs) -> Any: ...
    def delMessage(self, *args, **kwargs) -> Any: ...

class plClothingItem(hsKeyedObject):
    accessory: Any = ...
    customText: Any = ...
    defaultTint1: Any = ...
    defaultTint2: Any = ...
    description: Any = ...
    group: Any = ...
    icon: Any = ...
    itemName: Any = ...
    kClothingBaseFemale: Any = ...
    kClothingBaseMale: Any = ...
    kClothingBaseNoOptions: Any = ...
    kLODHigh: Any = ...
    kLODLow: Any = ...
    kLODMedium: Any = ...
    kLayerBase: Any = ...
    kLayerSkin: Any = ...
    kLayerSkinBlend1: Any = ...
    kLayerSkinBlend2: Any = ...
    kLayerSkinBlend3: Any = ...
    kLayerSkinBlend4: Any = ...
    kLayerSkinBlend5: Any = ...
    kLayerSkinBlend6: Any = ...
    kLayerTint1: Any = ...
    kLayerTint2: Any = ...
    kSetBackpack: Any = ...
    kSetEye: Any = ...
    kSetFace: Any = ...
    kSetGlasses: Any = ...
    kSetHand: Any = ...
    kSetKI: Any = ...
    kSetPants: Any = ...
    kSetPlayerBook: Any = ...
    kSetShirt: Any = ...
    kSetShoe: Any = ...
    kTypeAccessory: Any = ...
    kTypeFace: Any = ...
    kTypeHair: Any = ...
    kTypeLeftFoot: Any = ...
    kTypeLeftHand: Any = ...
    kTypePants: Any = ...
    kTypeRightFoot: Any = ...
    kTypeRightHand: Any = ...
    kTypeShirt: Any = ...
    sortOrder: Any = ...
    tileset: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addElement(self, *args, **kwargs) -> Any: ...
    def clearElements(self, *args, **kwargs) -> Any: ...
    def delElement(self, *args, **kwargs) -> Any: ...
    def getElementName(self, *args, **kwargs) -> Any: ...
    def getElementTexture(self, *args, **kwargs) -> Any: ...
    def getMesh(self, *args, **kwargs) -> Any: ...
    def setElementName(self, *args, **kwargs) -> Any: ...
    def setElementTexture(self, *args, **kwargs) -> Any: ...
    def setMesh(self, *args, **kwargs) -> Any: ...

class plCluster:
    encoding: Any = ...
    group: Any = ...
    instances: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def addInstance(self, *args, **kwargs) -> Any: ...
    def clearInstances(self, *args, **kwargs) -> Any: ...
    def delInstance(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plClusterGroup(hsKeyedObject):
    LOD: Any = ...
    clusters: Any = ...
    drawable: Any = ...
    lights: Any = ...
    material: Any = ...
    regions: Any = ...
    renderLevel: Any = ...
    sceneNode: Any = ...
    template: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addCluster(self, *args, **kwargs) -> Any: ...
    def addLight(self, *args, **kwargs) -> Any: ...
    def addRegion(self, *args, **kwargs) -> Any: ...
    def clearClusters(self, *args, **kwargs) -> Any: ...
    def clearLights(self, *args, **kwargs) -> Any: ...
    def clearRegions(self, *args, **kwargs) -> Any: ...
    def delCluster(self, *args, **kwargs) -> Any: ...
    def delLight(self, *args, **kwargs) -> Any: ...
    def delRegion(self, *args, **kwargs) -> Any: ...

class plCollisionDetector(plDetectorModifier):
    kTypeAny: Any = ...
    kTypeBump: Any = ...
    kTypeEnter: Any = ...
    kTypeExit: Any = ...
    kTypeUnEnter: Any = ...
    kTypeUnExit: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCompoundController(plController):
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def convertToTMController(self, *args, **kwargs) -> Any: ...

class plCompoundPosController(plPosController):
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plCompoundRotController(plRotController):
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plConditionalObject(hsKeyedObject):
    satisfied: Any = ...
    toggle: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plConstAccelEaseCurve(plATCEaseCurve):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plControlEventConditionalObject(plConditionalObject):
    controlEvent: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plController(plCreatable):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plConvexIsect(plVolumeIsect):
    SinglePlane: Any = ...
    planes: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addPlane(self, *args, **kwargs) -> Any: ...
    def transform(self, *args, **kwargs) -> Any: ...

class plConvexVolume(plCreatable):
    localPlanes: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCoordinateInterface(plObjInterface):
    children: Any = ...
    kCanEverDelayTransform: Any = ...
    kDelayedTransformEval: Any = ...
    localToParent: Any = ...
    localToWorld: Any = ...
    parentToLocal: Any = ...
    worldToLocal: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addChild(self, *args, **kwargs) -> Any: ...
    def clearChildren(self, *args, **kwargs) -> Any: ...
    def delChild(self, *args, **kwargs) -> Any: ...

class plCreatable:
    def __init__(self, *args, **kwargs) -> None: ...
    def ClassIndex(self, *args, **kwargs) -> Any: ...
    def ClassIndexVer(self, *args, **kwargs) -> Any: ...
    def ClassInstance(self, *args, **kwargs) -> Any: ...
    def ClassName(self, *args, **kwargs) -> Any: ...
    def isStub(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def toPrc(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plCreatableStub(plCreatable):
    def __init__(self, *args, **kwargs) -> None: ...
    def getData(self, *args, **kwargs) -> Any: ...
    def getLength(self, *args, **kwargs) -> Any: ...

class plCubicEnvironmap(plBitmap):
    backFace: Any = ...
    bottomFace: Any = ...
    frontFace: Any = ...
    leftFace: Any = ...
    rightFace: Any = ...
    topFace: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCubicRenderTarget(plRenderTarget):
    backFace: Any = ...
    bottomFace: Any = ...
    faces: Any = ...
    frontFace: Any = ...
    kBackFace: Any = ...
    kBottomFace: Any = ...
    kFrontFace: Any = ...
    kLeftFace: Any = ...
    kRightFace: Any = ...
    kTopFace: Any = ...
    leftFace: Any = ...
    rightFace: Any = ...
    topFace: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plCullPoly:
    center: Any = ...
    dist: Any = ...
    flags: Any = ...
    kHole: Any = ...
    kNone: Any = ...
    kTwoSided: Any = ...
    norm: Any = ...
    radius: Any = ...
    verts: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plCursorChangeMsg(plMessage):
    kCursorArrow: Any = ...
    kCursorClicked: Any = ...
    kCursorDown: Any = ...
    kCursorGrab: Any = ...
    kCursorHidden: Any = ...
    kCursorLeft: Any = ...
    kCursorOpen: Any = ...
    kCursorPoised: Any = ...
    kCursorRight: Any = ...
    kCursorUnClicked: Any = ...
    kCursorUp: Any = ...
    kNoChange: Any = ...
    kNullCursor: Any = ...
    priority: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDDSurface:
    DDPF_ALPHA: Any = ...
    DDPF_ALPHAPIXELS: Any = ...
    DDPF_ALPHAPREMULT: Any = ...
    DDPF_BUMPDUDV: Any = ...
    DDPF_BUMPLUMINANCE: Any = ...
    DDPF_COMPRESSED: Any = ...
    DDPF_FOURCC: Any = ...
    DDPF_LUMINANCE: Any = ...
    DDPF_PALETTEINDEXED1: Any = ...
    DDPF_PALETTEINDEXED2: Any = ...
    DDPF_PALETTEINDEXED4: Any = ...
    DDPF_PALETTEINDEXED8: Any = ...
    DDPF_PALETTEINDEXEDTO8: Any = ...
    DDPF_RGB: Any = ...
    DDPF_RGBTOYUV: Any = ...
    DDPF_STENCILBUFFER: Any = ...
    DDPF_YUV: Any = ...
    DDPF_ZBUFFER: Any = ...
    DDPF_ZPIXELS: Any = ...
    DDSCAPS2_ADDITIONALPRIMARY: Any = ...
    DDSCAPS2_CUBEMAP: Any = ...
    DDSCAPS2_CUBEMAP_ALLFACES: Any = ...
    DDSCAPS2_CUBEMAP_NEGATIVEX: Any = ...
    DDSCAPS2_CUBEMAP_NEGATIVEY: Any = ...
    DDSCAPS2_CUBEMAP_NEGATIVEZ: Any = ...
    DDSCAPS2_CUBEMAP_POSITIVEX: Any = ...
    DDSCAPS2_CUBEMAP_POSITIVEY: Any = ...
    DDSCAPS2_CUBEMAP_POSITIVEZ: Any = ...
    DDSCAPS2_D3DTEXTUREMANAGE: Any = ...
    DDSCAPS2_DISCARDBACKBUFFER: Any = ...
    DDSCAPS2_DONOTPERSIST: Any = ...
    DDSCAPS2_ENABLEALPHACHANNEL: Any = ...
    DDSCAPS2_EXTENDEDFORMATPRIMARY: Any = ...
    DDSCAPS2_HARDWAREDEINTERLACE: Any = ...
    DDSCAPS2_HINTALIASING: Any = ...
    DDSCAPS2_HINTDYNAMIC: Any = ...
    DDSCAPS2_HINTSTATIC: Any = ...
    DDSCAPS2_MIPMAPSUBLEVEL: Any = ...
    DDSCAPS2_NOTUSERLOCKABLE: Any = ...
    DDSCAPS2_NPATCHES: Any = ...
    DDSCAPS2_OPAQUE: Any = ...
    DDSCAPS2_POINTS: Any = ...
    DDSCAPS2_RESERVED1: Any = ...
    DDSCAPS2_RESERVED2: Any = ...
    DDSCAPS2_RESERVED3: Any = ...
    DDSCAPS2_RTPATCHES: Any = ...
    DDSCAPS2_STEREOSURFACELEFT: Any = ...
    DDSCAPS2_TEXTUREMANAGE: Any = ...
    DDSCAPS2_VOLUME: Any = ...
    DDSCAPS3_AUTOGENMIPMAP: Any = ...
    DDSCAPS3_CREATESHAREDRESOURCE: Any = ...
    DDSCAPS3_DMAP: Any = ...
    DDSCAPS3_LIGHTWEIGHTMIPMAP: Any = ...
    DDSCAPS3_MULTISAMPLE_MASK: Any = ...
    DDSCAPS3_MULTISAMPLE_QUALITY_MASK: Any = ...
    DDSCAPS3_MULTISAMPLE_QUALITY_SHIFT: Any = ...
    DDSCAPS3_OPENSHAREDRESOURCE: Any = ...
    DDSCAPS3_READONLYRESOURCE: Any = ...
    DDSCAPS3_RESERVED1: Any = ...
    DDSCAPS3_RESERVED2: Any = ...
    DDSCAPS_3DDEVICE: Any = ...
    DDSCAPS_ALLOCONLOAD: Any = ...
    DDSCAPS_ALPHA: Any = ...
    DDSCAPS_BACKBUFFER: Any = ...
    DDSCAPS_COMPLEX: Any = ...
    DDSCAPS_FLIP: Any = ...
    DDSCAPS_FRONTBUFFER: Any = ...
    DDSCAPS_HWCODEC: Any = ...
    DDSCAPS_LIVEVIDEO: Any = ...
    DDSCAPS_LOCALVIDMEM: Any = ...
    DDSCAPS_MIPMAP: Any = ...
    DDSCAPS_MODEX: Any = ...
    DDSCAPS_NONLOCALVIDMEM: Any = ...
    DDSCAPS_OFFSCREENPLAIN: Any = ...
    DDSCAPS_OPTIMIZED: Any = ...
    DDSCAPS_OVERLAY: Any = ...
    DDSCAPS_OWNDC: Any = ...
    DDSCAPS_PALETTE: Any = ...
    DDSCAPS_PRIMARYSURFACE: Any = ...
    DDSCAPS_PRIMARYSURFACELEFT: Any = ...
    DDSCAPS_RESERVED1: Any = ...
    DDSCAPS_RESERVED2: Any = ...
    DDSCAPS_STANDARDVGAMODE: Any = ...
    DDSCAPS_SYSTEMMEMORY: Any = ...
    DDSCAPS_TEXTURE: Any = ...
    DDSCAPS_VIDEOMEMORY: Any = ...
    DDSCAPS_VIDEOPORT: Any = ...
    DDSCAPS_VISIBLE: Any = ...
    DDSCAPS_WRITEONLY: Any = ...
    DDSCAPS_ZBUFFER: Any = ...
    DDSD_ALL: Any = ...
    DDSD_ALPHABITDEPTH: Any = ...
    DDSD_BACKBUFFERCOUNT: Any = ...
    DDSD_CAPS: Any = ...
    DDSD_CKDESTBLT: Any = ...
    DDSD_CKDESTOVERLAY: Any = ...
    DDSD_CKSRCBLT: Any = ...
    DDSD_CKSRCOVERLAY: Any = ...
    DDSD_DEPTH: Any = ...
    DDSD_FVF: Any = ...
    DDSD_HEIGHT: Any = ...
    DDSD_LINEARSIZE: Any = ...
    DDSD_LPSURFACE: Any = ...
    DDSD_MIPMAPCOUNT: Any = ...
    DDSD_PITCH: Any = ...
    DDSD_PIXELFORMAT: Any = ...
    DDSD_REFRESHRATE: Any = ...
    DDSD_SRCVBHANDLE: Any = ...
    DDSD_TEXTURESTAGE: Any = ...
    DDSD_WIDTH: Any = ...
    DDSD_ZBUFFERBITDEPTH: Any = ...
    FOURCC_DXT1: Any = ...
    FOURCC_DXT3: Any = ...
    FOURCC_DXT5: Any = ...
    alphaDepth: Any = ...
    backBufferCount: Any = ...
    caps: Any = ...
    caps2: Any = ...
    caps3: Any = ...
    caps4: Any = ...
    ckDestBlt: Any = ...
    ckDestOverlay: Any = ...
    ckSrcBlt: Any = ...
    ckSrcOverlay: Any = ...
    data: Any = ...
    depth: Any = ...
    flags: Any = ...
    fvf: Any = ...
    height: Any = ...
    linearSize: Any = ...
    mipmapCount: Any = ...
    pf_BBitMask: Any = ...
    pf_GBitMask: Any = ...
    pf_RBitMask: Any = ...
    pf_UBitMask: Any = ...
    pf_VBitMask: Any = ...
    pf_YBitMask: Any = ...
    pf_ZBitMask: Any = ...
    pf_alphaBitMask: Any = ...
    pf_bitCount: Any = ...
    pf_bitDepth: Any = ...
    pf_bumpDuBitMask: Any = ...
    pf_bumpDvBitMask: Any = ...
    pf_bumpLuminanceBitMask: Any = ...
    pf_colorZBitMask: Any = ...
    pf_flags: Any = ...
    pf_fourCC: Any = ...
    pf_luminanceBitMask: Any = ...
    pf_multiSampleCaps: Any = ...
    pf_operations: Any = ...
    pf_stencilBitDepth: Any = ...
    pf_stencilBitMask: Any = ...
    pitch: Any = ...
    refreshRate: Any = ...
    srcVBHandle: Any = ...
    textureStage: Any = ...
    width: Any = ...
    zbufferBitDepth: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def calcBufferSize(self, *args, **kwargs) -> Any: ...
    def calcNumLevels(self, *args, **kwargs) -> Any: ...
    def calcTotalBufferSize(self, *args, **kwargs) -> Any: ...
    def createMipmap(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def setFromMipmap(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plDISpanIndex:
    flags: Any = ...
    indices: Any = ...
    kDontTransformSpans: Any = ...
    kMatrixOnly: Any = ...
    kNone: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plDebug:
    kDLAll: Any = ...
    kDLDebug: Any = ...
    kDLError: Any = ...
    kDLNone: Any = ...
    kDLWarning: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def Debug(self, *args, **kwargs) -> Any: ...
    def Error(self, *args, **kwargs) -> Any: ...
    def Init(self, *args, **kwargs) -> Any: ...
    def InitFile(self, *args, **kwargs) -> Any: ...
    def Warning(self, *args, **kwargs) -> Any: ...

class plDetectorModifier(plSingleModifier):
    proxy: Any = ...
    receivers: Any = ...
    remoteMod: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addReceiver(self, *args, **kwargs) -> Any: ...
    def clearReceivers(self, *args, **kwargs) -> Any: ...
    def delReceiver(self, *args, **kwargs) -> Any: ...

class plDirectShadowMaster(plShadowMaster):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDirectionalLightInfo(plLightInfo):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDistOpacityMod(plSingleModifier):
    farOpaq: Any = ...
    farTrans: Any = ...
    nearOpaq: Any = ...
    nearTrans: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDrawInterface(plObjInterface):
    drawables: Any = ...
    regions: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addDrawable(self, *args, **kwargs) -> Any: ...
    def addRegion(self, *args, **kwargs) -> Any: ...
    def clearDrawables(self, *args, **kwargs) -> Any: ...
    def clearRegions(self, *args, **kwargs) -> Any: ...
    def delDrawable(self, *args, **kwargs) -> Any: ...
    def delRegion(self, *args, **kwargs) -> Any: ...

class plDrawable(hsKeyedObject):
    kAllProxies: Any = ...
    kAllTypes: Any = ...
    kAudibleProxy: Any = ...
    kCameraProxy: Any = ...
    kCoordinateProxy: Any = ...
    kCritCharacter: Any = ...
    kCritSortFaces: Any = ...
    kCritSortSpans: Any = ...
    kCritStatic: Any = ...
    kEnviron: Any = ...
    kGenericProxy: Any = ...
    kLightProxy: Any = ...
    kNonDrawable: Any = ...
    kNormal: Any = ...
    kOccSnapProxy: Any = ...
    kOccluderProxy: Any = ...
    kPhysicalProxy: Any = ...
    kPropCharacter: Any = ...
    kPropHasVisLOS: Any = ...
    kPropNoDraw: Any = ...
    kPropNoReSort: Any = ...
    kPropPartialSort: Any = ...
    kPropSortAsOne: Any = ...
    kPropSortFaces: Any = ...
    kPropSortSpans: Any = ...
    kPropUNUSED: Any = ...
    kPropVolatile: Any = ...
    kSpanIDMask: Any = ...
    kSpanTypeIcicle: Any = ...
    kSpanTypeMask: Any = ...
    kSpanTypeParticleSpan: Any = ...
    kSubAllTypes: Any = ...
    kSubEnviron: Any = ...
    kSubNonDrawable: Any = ...
    kSubNormal: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDrawableSpans(plDrawable):
    DIIndices: Any = ...
    boneToLocals: Any = ...
    bufferGroups: Any = ...
    criteria: Any = ...
    localBounds: Any = ...
    localToBones: Any = ...
    localToWorlds: Any = ...
    materials: Any = ...
    maxWorldBounds: Any = ...
    props: Any = ...
    renderLevel: Any = ...
    sceneNode: Any = ...
    sourceSpans: Any = ...
    spaceTree: Any = ...
    spans: Any = ...
    worldBounds: Any = ...
    worldToLocals: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def BuildSpaceTree(self, *args, **kwargs) -> Any: ...
    def addCells(self, *args, **kwargs) -> Any: ...
    def addDIIndex(self, *args, **kwargs) -> Any: ...
    def addIcicle(self, *args, **kwargs) -> Any: ...
    def addIndices(self, *args, **kwargs) -> Any: ...
    def addMaterial(self, *args, **kwargs) -> Any: ...
    def addSourceSpan(self, *args, **kwargs) -> Any: ...
    def addTransform(self, *args, **kwargs) -> Any: ...
    def addVerts(self, *args, **kwargs) -> Any: ...
    def buildDIIndex(self, *args, **kwargs) -> Any: ...
    def calcBounds(self, *args, **kwargs) -> Any: ...
    def clearDIIndices(self, *args, **kwargs) -> Any: ...
    def clearMaterials(self, *args, **kwargs) -> Any: ...
    def clearSpans(self, *args, **kwargs) -> Any: ...
    def clearTransforms(self, *args, **kwargs) -> Any: ...
    def composeGeometry(self, *args, **kwargs) -> Any: ...
    def createBufferGroup(self, *args, **kwargs) -> Any: ...
    def decomposeGeometry(self, *args, **kwargs) -> Any: ...
    def deleteBufferGroup(self, *args, **kwargs) -> Any: ...
    def getCells(self, *args, **kwargs) -> Any: ...
    def getIndices(self, *args, **kwargs) -> Any: ...
    def getVerts(self, *args, **kwargs) -> Any: ...

class plDynaBulletMgr(plDynaDecalMgr):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaDecalMgr(plSynchedObject):
    decayStart: Any = ...
    gridSizeU: Any = ...
    gridSizeV: Any = ...
    intensity: Any = ...
    lifeSpan: Any = ...
    matPreShade: Any = ...
    matRTShade: Any = ...
    maxNumIdx: Any = ...
    maxNumVerts: Any = ...
    notifies: Any = ...
    partyObjects: Any = ...
    partyTime: Any = ...
    rampEnd: Any = ...
    scale: Any = ...
    targets: Any = ...
    waitOnEnable: Any = ...
    wetLength: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addNotify(self, *args, **kwargs) -> Any: ...
    def addPartyObject(self, *args, **kwargs) -> Any: ...
    def addTarget(self, *args, **kwargs) -> Any: ...
    def clearNotifies(self, *args, **kwargs) -> Any: ...
    def clearPartyObjects(self, *args, **kwargs) -> Any: ...
    def clearTargets(self, *args, **kwargs) -> Any: ...
    def delNotify(self, *args, **kwargs) -> Any: ...
    def delPartyObject(self, *args, **kwargs) -> Any: ...
    def delTarget(self, *args, **kwargs) -> Any: ...

class plDynaFootMgr(plDynaDecalMgr):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaPuddleMgr(plDynaRippleMgr):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaRippleMgr(plDynaDecalMgr):
    finalUVW: Any = ...
    initUVW: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaRippleVSMgr(plDynaRippleMgr):
    waveSet: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaTorpedoMgr(plDynaRippleMgr):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaTorpedoVSMgr(plDynaTorpedoMgr):
    waveSet: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynaWakeMgr(plDynaRippleMgr):
    animPath: Any = ...
    animWgt: Any = ...
    defaultDir: Any = ...
    velWgt: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynamicCamMap(plRenderTarget):
    camera: Any = ...
    color: Any = ...
    disableTexture: Any = ...
    fogStart: Any = ...
    hither: Any = ...
    incCharacters: Any = ...
    matLayers: Any = ...
    refreshRate: Any = ...
    rootNode: Any = ...
    targetNodes: Any = ...
    visRegionNames: Any = ...
    visRegions: Any = ...
    yon: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addMatLayer(self, *args, **kwargs) -> Any: ...
    def addTargetNode(self, *args, **kwargs) -> Any: ...
    def addVisRegion(self, *args, **kwargs) -> Any: ...
    def addVisRegionName(self, *args, **kwargs) -> Any: ...
    def clearMatLayers(self, *args, **kwargs) -> Any: ...
    def clearTargetNodes(self, *args, **kwargs) -> Any: ...
    def clearVisRegionNames(self, *args, **kwargs) -> Any: ...
    def clearVisRegions(self, *args, **kwargs) -> Any: ...
    def delMatLayer(self, *args, **kwargs) -> Any: ...
    def delTargetNode(self, *args, **kwargs) -> Any: ...
    def delVisRegion(self, *args, **kwargs) -> Any: ...
    def delVisRegionName(self, *args, **kwargs) -> Any: ...

class plDynamicEnvMap(plCubicRenderTarget):
    color: Any = ...
    fogStart: Any = ...
    hither: Any = ...
    incCharacters: Any = ...
    position: Any = ...
    refreshRate: Any = ...
    rootNode: Any = ...
    visRegionNames: Any = ...
    visRegions: Any = ...
    yon: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plDynamicTextMap(plMipmap):
    hasAlpha: Any = ...
    initBuffer: Any = ...
    visHeight: Any = ...
    visWidth: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plEaseController(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plEmoteAnim(plATCAnim):
    bodyUsage: Any = ...
    fadeIn: Any = ...
    fadeOut: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plEnableMsg(plMessage):
    kAll: Any = ...
    kAudible: Any = ...
    kByType: Any = ...
    kDisable: Any = ...
    kDrawable: Any = ...
    kEnable: Any = ...
    kPhysical: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getCmd(self, *args, **kwargs) -> Any: ...
    def getType(self, *args, **kwargs) -> Any: ...
    def setCmd(self, *args, **kwargs) -> Any: ...
    def setType(self, *args, **kwargs) -> Any: ...

class plEncryptedStream(hsFileStream):
    kEncAES: Any = ...
    kEncAuto: Any = ...
    kEncDroid: Any = ...
    kEncNone: Any = ...
    kEncXtea: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def IsFileEncrypted(self, *args, **kwargs) -> Any: ...
    def getEncType(self, *args, **kwargs) -> Any: ...
    def open(self, *args, **kwargs) -> Any: ...
    def setKey(self, *args, **kwargs) -> Any: ...
    def __enter__(self) -> Any: ...
    def __exit__(self, type, value, traceback) -> Any: ...

class plEventCallbackMsg(plMessage):
    event: Any = ...
    eventTime: Any = ...
    index: Any = ...
    repeats: Any = ...
    user: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plExcludeRegionModifier(plSingleModifier):
    kBlockCameras: Any = ...
    safePoints: Any = ...
    seek: Any = ...
    seekTime: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addSafePoint(self, *args, **kwargs) -> Any: ...
    def clearSafePoints(self, *args, **kwargs) -> Any: ...
    def delSafePoint(self, *args, **kwargs) -> Any: ...

class plExcludeRegionMsg(plMessage):
    cmd: Any = ...
    kClear: Any = ...
    kRelease: Any = ...
    synchFlags: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFacingConditionalObject(plConditionalObject):
    directional: Any = ...
    tolerance: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFactory:
    k2WayWinAudible: Any = ...
    kAGAnim: Any = ...
    kAGAnimBink: Any = ...
    kAGApplicator: Any = ...
    kAGChannel: Any = ...
    kAGCmdMsg: Any = ...
    kAGDetachCallbackMsg: Any = ...
    kAGInstanceCallbackMsg: Any = ...
    kAGMasterMod: Any = ...
    kAGMasterSDLModifier: Any = ...
    kAGModifier: Any = ...
    kAIArrivedAtGoalMsg: Any = ...
    kAIBrainCreatedMsg: Any = ...
    kAIMsg: Any = ...
    kANDConditionalObject: Any = ...
    kATCAnim: Any = ...
    kATCChannel: Any = ...
    kATCEaseCurve: Any = ...
    kAVIWriter: Any = ...
    kAccountUpdateMsg: Any = ...
    kActivatorActivatorConditionalObject: Any = ...
    kActivatorConditionalObject: Any = ...
    kActivatorMsg: Any = ...
    kActivePrintShape: Any = ...
    kAgeBeginLoadingMsg: Any = ...
    kAgeGlobalAnim: Any = ...
    kAgeInfoStruct: Any = ...
    kAgeLinkStruct: Any = ...
    kAgeLoaded2Msg: Any = ...
    kAgeLoadedMsg: Any = ...
    kAgeLoader: Any = ...
    kAgeLoaderMsg: Any = ...
    kAliasModifier: Any = ...
    kAngularImpulseMsg: Any = ...
    kAngularVelocityMsg: Any = ...
    kAnimCmdMsg: Any = ...
    kAnimEvalMsg: Any = ...
    kAnimEventModifier: Any = ...
    kAnimPath: Any = ...
    kAnimStage: Any = ...
    kAnimTimeConvert: Any = ...
    kAnimTimeConvertSDLModifier: Any = ...
    kAnimationEventConditionalObject: Any = ...
    kArmatureBrain: Any = ...
    kArmatureEffect: Any = ...
    kArmatureEffectFootSound: Any = ...
    kArmatureEffectMsg: Any = ...
    kArmatureEffectStateMsg: Any = ...
    kArmatureEffectsMgr: Any = ...
    kArmatureLODMod: Any = ...
    kArmatureMod: Any = ...
    kArmatureModBase: Any = ...
    kArmatureUpdateMsg: Any = ...
    kAttachMsg: Any = ...
    kAudible: Any = ...
    kAudibleNull: Any = ...
    kAudioInterface: Any = ...
    kAudioSysMsg: Any = ...
    kAudioSystem: Any = ...
    kAutoProfile: Any = ...
    kAutoWalkRegion: Any = ...
    kAvAnimTask: Any = ...
    kAvBlendedSeekTask: Any = ...
    kAvBrain: Any = ...
    kAvBrainAvatar: Any = ...
    kAvBrainBlimp: Any = ...
    kAvBrainClimb: Any = ...
    kAvBrainCoop: Any = ...
    kAvBrainCritter: Any = ...
    kAvBrainDrive: Any = ...
    kAvBrainFlight: Any = ...
    kAvBrainFlightNPC: Any = ...
    kAvBrainGeneric: Any = ...
    kAvBrainGenericMsg: Any = ...
    kAvBrainHuman: Any = ...
    kAvBrainLadder: Any = ...
    kAvBrainNPC: Any = ...
    kAvBrainPath: Any = ...
    kAvBrainPirahna: Any = ...
    kAvBrainPuppet: Any = ...
    kAvBrainQuab: Any = ...
    kAvBrainRideAnimatedPhysical: Any = ...
    kAvBrainSample: Any = ...
    kAvBrainSwim: Any = ...
    kAvBrainUser: Any = ...
    kAvCoopMsg: Any = ...
    kAvEnableMsg: Any = ...
    kAvEnableTask: Any = ...
    kAvLadderMod: Any = ...
    kAvOneShotLinkTask: Any = ...
    kAvOneShotMsg: Any = ...
    kAvOneShotTask: Any = ...
    kAvPopBrainMsg: Any = ...
    kAvPushBrainMsg: Any = ...
    kAvSeekMsg: Any = ...
    kAvSeekTask: Any = ...
    kAvTask: Any = ...
    kAvTaskBrain: Any = ...
    kAvTaskDumbSeek: Any = ...
    kAvTaskMsg: Any = ...
    kAvTaskOneShot: Any = ...
    kAvTaskOrient: Any = ...
    kAvTaskSeek: Any = ...
    kAvTaskSeekDoneMsg: Any = ...
    kAvTaskSmartSeek: Any = ...
    kAvatarAnim: Any = ...
    kAvatarAnimMgr: Any = ...
    kAvatarBehaviorNotifyMsg: Any = ...
    kAvatarFootMsg: Any = ...
    kAvatarInputStateMsg: Any = ...
    kAvatarMgr: Any = ...
    kAvatarMod: Any = ...
    kAvatarMsg: Any = ...
    kAvatarOpacityCallbackMsg: Any = ...
    kAvatarPhysicalSDLModifier: Any = ...
    kAvatarPhysicsEnableCallbackMsg: Any = ...
    kAvatarSDLModifier: Any = ...
    kAvatarSetTypeMsg: Any = ...
    kAvatarSpawnNotifyMsg: Any = ...
    kAvatarStealthModeMsg: Any = ...
    kAxisAnimModifier: Any = ...
    kAxisEventMsg: Any = ...
    kBackdoorMsg: Any = ...
    kBitmap: Any = ...
    kBlower: Any = ...
    kBookData: Any = ...
    kBoundInterface: Any = ...
    kBoundsIsect: Any = ...
    kBubbleShaderMod: Any = ...
    kBulletMsg: Any = ...
    kCCRBanLinkingMsg: Any = ...
    kCCRCommunicationMsg: Any = ...
    kCCRGameOperator: Any = ...
    kCCRInvisibleMsg: Any = ...
    kCCRMessage: Any = ...
    kCCRMgr: Any = ...
    kCCRPetitionMsg: Any = ...
    kCCRSeniorSpecialist: Any = ...
    kCCRShiftSupervisor: Any = ...
    kCCRSilencePlayerMsg: Any = ...
    kCCRSpecialist: Any = ...
    kCameraBrain: Any = ...
    kCameraBrain1: Any = ...
    kCameraBrain1_Avatar: Any = ...
    kCameraBrain1_Circle: Any = ...
    kCameraBrain1_Drive: Any = ...
    kCameraBrain1_FirstPerson: Any = ...
    kCameraBrain1_Fixed: Any = ...
    kCameraBrain1_POA: Any = ...
    kCameraBrain1_POAFixed: Any = ...
    kCameraBrainUru: Any = ...
    kCameraBrainUru_Circle: Any = ...
    kCameraBrainUru_Drive: Any = ...
    kCameraBrainUru_FirstPerson: Any = ...
    kCameraBrainUru_Fixed: Any = ...
    kCameraBrainUru_Follow: Any = ...
    kCameraBrain_Avatar: Any = ...
    kCameraBrain_Default: Any = ...
    kCameraBrain_Drive: Any = ...
    kCameraBrain_Expert: Any = ...
    kCameraBrain_FP: Any = ...
    kCameraBrain_Fixed: Any = ...
    kCameraBrain_FixedPan: Any = ...
    kCameraBrain_Flight: Any = ...
    kCameraBrain_Freelook: Any = ...
    kCameraBrain_Ground: Any = ...
    kCameraBrain_M5: Any = ...
    kCameraBrain_Novice: Any = ...
    kCameraBrain_NovicePlus: Any = ...
    kCameraModifier: Any = ...
    kCameraMsg: Any = ...
    kCameraRegionDetector: Any = ...
    kCameraTargetFadeMsg: Any = ...
    kCaptureRenderMsg: Any = ...
    kClient: Any = ...
    kClientApp: Any = ...
    kClientGuid: Any = ...
    kClientMsg: Any = ...
    kClientRefMsg: Any = ...
    kClientSessionMgr: Any = ...
    kClimbEventMsg: Any = ...
    kClimbMsg: Any = ...
    kClimbingWallMsg: Any = ...
    kCloneSpawnModifier: Any = ...
    kClothingBase: Any = ...
    kClothingItem: Any = ...
    kClothingMgr: Any = ...
    kClothingMsg: Any = ...
    kClothingOutfit: Any = ...
    kClothingSDLModifier: Any = ...
    kClothingUpdateBCMsg: Any = ...
    kClusterGroup: Any = ...
    kCmdIfaceModMsg: Any = ...
    kCollideMsg: Any = ...
    kCollisionDetector: Any = ...
    kCollisionReactor: Any = ...
    kCommonNeighborhoodsInitTask: Any = ...
    kComplexIsect: Any = ...
    kCompoundController: Any = ...
    kCompoundPhysicalMesh: Any = ...
    kCompoundPosController: Any = ...
    kCompoundRotController: Any = ...
    kCompoundTMModifier: Any = ...
    kCondRefMsg: Any = ...
    kConditionalObject: Any = ...
    kConeIsect: Any = ...
    kConnectedToVaultMsg: Any = ...
    kConsole: Any = ...
    kConsoleMsg: Any = ...
    kConstAccelEaseCurve: Any = ...
    kControlEventConditionalObject: Any = ...
    kControlEventMsg: Any = ...
    kController: Any = ...
    kConvexIsect: Any = ...
    kConvexVolume: Any = ...
    kCoopCoordinator: Any = ...
    kCoordinateInterface: Any = ...
    kCorrectionMsg: Any = ...
    kCreatableGenericValue: Any = ...
    kCreatableListHelper: Any = ...
    kCreatableStream: Any = ...
    kCreatableUuid: Any = ...
    kCrossfade: Any = ...
    kCrossfadeMsg: Any = ...
    kCubicEnvironmap: Any = ...
    kCubicRenderTarget: Any = ...
    kCubicRenderTargetModifier: Any = ...
    kCursorChangeMsg: Any = ...
    kCutter: Any = ...
    kCylinderIsect: Any = ...
    kDBGenericSQLDB: Any = ...
    kDISpansMsg: Any = ...
    kDX8Pipeline: Any = ...
    kDX9Pipeline: Any = ...
    kDXPipeline: Any = ...
    kDampMsg: Any = ...
    kDbEventLog: Any = ...
    kDbInterface: Any = ...
    kDbProxyInterface: Any = ...
    kDebugKeyEventMsg: Any = ...
    kDecalEnableMod: Any = ...
    kDelayedTransformMsg: Any = ...
    kDetectorModifier: Any = ...
    kDeviceRecreateMsg: Any = ...
    kDirectMusicSound: Any = ...
    kDirectShadowMaster: Any = ...
    kDirectionalLightInfo: Any = ...
    kDispatch: Any = ...
    kDispatchBase: Any = ...
    kDistOpacityMod: Any = ...
    kDniCoordinateInfo: Any = ...
    kDrawInterface: Any = ...
    kDrawable: Any = ...
    kDrawableIce: Any = ...
    kDrawableMesh: Any = ...
    kDrawablePatchSet: Any = ...
    kDrawableSpans: Any = ...
    kDynaBulletMgr: Any = ...
    kDynaDecalEnableMsg: Any = ...
    kDynaDecalMgr: Any = ...
    kDynaFootMgr: Any = ...
    kDynaPuddleMgr: Any = ...
    kDynaRippleMgr: Any = ...
    kDynaRippleVSMgr: Any = ...
    kDynaTorpedoMgr: Any = ...
    kDynaTorpedoVSMgr: Any = ...
    kDynaWakeMgr: Any = ...
    kDynamicCamMap: Any = ...
    kDynamicColorRGBA: Any = ...
    kDynamicEnvMap: Any = ...
    kDynamicEnvMapMsg: Any = ...
    kDynamicMatrix33: Any = ...
    kDynamicMatrix44: Any = ...
    kDynamicScalar: Any = ...
    kDynamicTextMap: Any = ...
    kDynamicTextMsg: Any = ...
    kDynamicValue: Any = ...
    kEAXEffect: Any = ...
    kEAXListenerMod: Any = ...
    kEAXPitchShifter: Any = ...
    kEAXReverbEffect: Any = ...
    kEaseController: Any = ...
    kEffect: Any = ...
    kElementRefMsg: Any = ...
    kElevatorModifier: Any = ...
    kEmoteAnim: Any = ...
    kEnableMsg: Any = ...
    kEvalMsg: Any = ...
    kEventCallbackInterceptMsg: Any = ...
    kEventCallbackMsg: Any = ...
    kEventCallbackSetupMsg: Any = ...
    kEventGroupEnableMsg: Any = ...
    kEventGroupMsg: Any = ...
    kEventLog: Any = ...
    kEventManager: Any = ...
    kExcludeRegionModifier: Any = ...
    kExcludeRegionMsg: Any = ...
    kExcludeRegionSDLModifier: Any = ...
    kFXMaterial: Any = ...
    kFacingConditionalObject: Any = ...
    kFadeOpacityLay: Any = ...
    kFadeOpacityMod: Any = ...
    kFakeOutMsg: Any = ...
    kFilterCoordInterface: Any = ...
    kFogControl: Any = ...
    kFogEnvironment: Any = ...
    kFollowMod: Any = ...
    kFont: Any = ...
    kFontCache: Any = ...
    kForceMsg: Any = ...
    kFreezeMsg: Any = ...
    kGMaterial: Any = ...
    kGRenderProcs: Any = ...
    kGUIButtonMod: Any = ...
    kGUICheckBoxCtrl: Any = ...
    kGUIClickMapCtrl: Any = ...
    kGUIControlMod: Any = ...
    kGUICreditsCtrl: Any = ...
    kGUIDialogMod: Any = ...
    kGUIDragBarCtrl: Any = ...
    kGUIDraggableMod: Any = ...
    kGUIDynDisplayCtrl: Any = ...
    kGUIEditBoxMod: Any = ...
    kGUIKnobCtrl: Any = ...
    kGUIListBoxMod: Any = ...
    kGUIMenuItem: Any = ...
    kGUIMultiLineEditCtrl: Any = ...
    kGUINotifyMsg: Any = ...
    kGUIPopUpMenu: Any = ...
    kGUIProgressCtrl: Any = ...
    kGUIRadioGroupCtrl: Any = ...
    kGUISketchCtrl: Any = ...
    kGUISkin: Any = ...
    kGUITextBoxMod: Any = ...
    kGUIUpDownPairMod: Any = ...
    kGUIValueCtrl: Any = ...
    kGameCli: Any = ...
    kGameCliMsg: Any = ...
    kGameGUIMgr: Any = ...
    kGameGUIMsg: Any = ...
    kGameMarkerModifier: Any = ...
    kGameMgrMsg: Any = ...
    kGenRefMsg: Any = ...
    kGenericPhysical: Any = ...
    kGmBlueSpiral: Any = ...
    kGmClimbingWall: Any = ...
    kGmHeek: Any = ...
    kGmMarker: Any = ...
    kGmTicTacToe: Any = ...
    kGmVarSync: Any = ...
    kGrassShaderMod: Any = ...
    kGuidepathModifier: Any = ...
    kHKSimulationSynchMsg: Any = ...
    kHKSubWorld: Any = ...
    kHardRegion: Any = ...
    kHardRegionComplex: Any = ...
    kHardRegionIntersect: Any = ...
    kHardRegionInvert: Any = ...
    kHardRegionPlanes: Any = ...
    kHardRegionUnion: Any = ...
    kHavokConstraintsMod: Any = ...
    kHingeConstraintMod: Any = ...
    kIKModifier: Any = ...
    kIMouseBEventMsg: Any = ...
    kIMouseXEventMsg: Any = ...
    kIMouseYEventMsg: Any = ...
    kIfaceFadeAvatarMsg: Any = ...
    kImageLibMod: Any = ...
    kImpulseMsg: Any = ...
    kInitialAgeStateLoadedMsg: Any = ...
    kInputEventMsg: Any = ...
    kInputIfaceMgrMsg: Any = ...
    kInputInterfaceMgr: Any = ...
    kInputManager: Any = ...
    kInstanceDrawInterface: Any = ...
    kIntRefMsg: Any = ...
    kInterestWellModifier: Any = ...
    kInterestingModMsg: Any = ...
    kInterestingModifier: Any = ...
    kInterestingPing: Any = ...
    kInterfaceInfoModifier: Any = ...
    kIntersectionIsect: Any = ...
    kInventoryMod: Any = ...
    kInventoryMsg: Any = ...
    kInventoryObjMod: Any = ...
    kJournalBook: Any = ...
    kKI: Any = ...
    kKIMsg: Any = ...
    kKeyEventMsg: Any = ...
    kKeyPressConditionalObject: Any = ...
    kKeyedObject: Any = ...
    kLODMipmap: Any = ...
    kLOSDispatch: Any = ...
    kLOSHitMsg: Any = ...
    kLOSRequestMsg: Any = ...
    kLadderModifier: Any = ...
    kLayRefMsg: Any = ...
    kLayer: Any = ...
    kLayerAVI: Any = ...
    kLayerAnimation: Any = ...
    kLayerAnimationBase: Any = ...
    kLayerBink: Any = ...
    kLayerDepth: Any = ...
    kLayerInterface: Any = ...
    kLayerLightBase: Any = ...
    kLayerLinkAnimation: Any = ...
    kLayerMovie: Any = ...
    kLayerOr: Any = ...
    kLayerProject: Any = ...
    kLayerSDLAnimation: Any = ...
    kLayerSDLModifier: Any = ...
    kLayerShadowBase: Any = ...
    kLayerTargetContainer: Any = ...
    kLayerTransform: Any = ...
    kLayerWrapper: Any = ...
    kLeafController: Any = ...
    kLightAmbientApplicator: Any = ...
    kLightDiffuseApplicator: Any = ...
    kLightInfo: Any = ...
    kLightModifier: Any = ...
    kLightRefMsg: Any = ...
    kLightSpace: Any = ...
    kLightSpecularApplicator: Any = ...
    kLimitedDirLightInfo: Any = ...
    kLineFollowMod: Any = ...
    kLineFollowModBase: Any = ...
    kLinearVelocityMsg: Any = ...
    kLinkCallbackMsg: Any = ...
    kLinkEffectBCMsg: Any = ...
    kLinkEffectPrepBCMsg: Any = ...
    kLinkEffectsDoneMsg: Any = ...
    kLinkEffectsMgr: Any = ...
    kLinkEffectsTriggerMsg: Any = ...
    kLinkEffectsTriggerPrepMsg: Any = ...
    kLinkInDoneMsg: Any = ...
    kLinkOutUnloadMsg: Any = ...
    kLinkToAgeMsg: Any = ...
    kLinkingMgrMsg: Any = ...
    kListener: Any = ...
    kListenerMsg: Any = ...
    kLoadAgeMsg: Any = ...
    kLoadAvatarMsg: Any = ...
    kLoadCloneMsg: Any = ...
    kLocalPlayerInBoxConditionalObject: Any = ...
    kLocalPlayerIntersectPlaneConditionalObject: Any = ...
    kLogicModBase: Any = ...
    kLogicModifier: Any = ...
    kLogicTriggerMsg: Any = ...
    kLtdDirModifier: Any = ...
    kMaintainersMarkerModifier: Any = ...
    kMarkerMgr: Any = ...
    kMarkerMsg: Any = ...
    kMatRefMsg: Any = ...
    kMaterial: Any = ...
    kMatrix33Controller: Any = ...
    kMatrix44Controller: Any = ...
    kMatrixBlend: Any = ...
    kMatrixBorrowedChannel: Any = ...
    kMatrixChannel: Any = ...
    kMatrixChannelApplicator: Any = ...
    kMatrixConstant: Any = ...
    kMatrixControllerCacheChannel: Any = ...
    kMatrixControllerChannel: Any = ...
    kMatrixDelayedCorrectionApplicator: Any = ...
    kMatrixDifferenceApp: Any = ...
    kMatrixTimeScale: Any = ...
    kMatrixUpdateMsg: Any = ...
    kMemberUpdateMsg: Any = ...
    kMeshRefMsg: Any = ...
    kMessage: Any = ...
    kMessageWithCallbacks: Any = ...
    kMipmap: Any = ...
    kMobileOccluder: Any = ...
    kModifier: Any = ...
    kModulator: Any = ...
    kMorphDataSet: Any = ...
    kMorphDelta: Any = ...
    kMorphSequence: Any = ...
    kMorphSequenceSDLMod: Any = ...
    kMouseEventMsg: Any = ...
    kMovableMod: Any = ...
    kMovieEventMsg: Any = ...
    kMovieMsg: Any = ...
    kMsgForwarder: Any = ...
    kMultiModMsg: Any = ...
    kMultiModifier: Any = ...
    kMultistageBehMod: Any = ...
    kMultistageModMsg: Any = ...
    kMySqlDB: Any = ...
    kNCAgeJoinerMsg: Any = ...
    kNPCSpawnMod: Any = ...
    kNetApp: Any = ...
    kNetAuthDatabase: Any = ...
    kNetClientApp: Any = ...
    kNetClientAuthTask: Any = ...
    kNetClientCalibrateTask: Any = ...
    kNetClientCommAuthTask: Any = ...
    kNetClientCommCheckServerSilenceTask: Any = ...
    kNetClientCommCreatePlayerTask: Any = ...
    kNetClientCommCreatePublicAgeTask: Any = ...
    kNetClientCommDeletePlayerTask: Any = ...
    kNetClientCommFindAgeTask: Any = ...
    kNetClientCommGetPlayerListTask: Any = ...
    kNetClientCommGetPublicAgeListTask: Any = ...
    kNetClientCommJoinAgeTask: Any = ...
    kNetClientCommLeaveTask: Any = ...
    kNetClientCommPingTask: Any = ...
    kNetClientCommRegisterOwnedAge: Any = ...
    kNetClientCommRegisterVisitAge: Any = ...
    kNetClientCommRemovePublicAgeTask: Any = ...
    kNetClientCommSendPeriodicAliveTask: Any = ...
    kNetClientCommSetActivePlayerTask: Any = ...
    kNetClientCommSetAgePublicTask: Any = ...
    kNetClientCommSetTimeoutTask: Any = ...
    kNetClientCommTask: Any = ...
    kNetClientCommUnregisterOwnerAge: Any = ...
    kNetClientCommUnregisterVisitAge: Any = ...
    kNetClientConnectAgeVaultTask: Any = ...
    kNetClientConnectPrepTask: Any = ...
    kNetClientFindAgeTask: Any = ...
    kNetClientFindDefaultAgeTask: Any = ...
    kNetClientGetPlayerVaultTask: Any = ...
    kNetClientJoinTask: Any = ...
    kNetClientLeaveTask: Any = ...
    kNetClientMember: Any = ...
    kNetClientMgr: Any = ...
    kNetClientMgrMsg: Any = ...
    kNetClientSetActivePlayerTask: Any = ...
    kNetClientTask: Any = ...
    kNetCommActivePlayerMsg: Any = ...
    kNetCommAuthConnectedMsg: Any = ...
    kNetCommAuthMsg: Any = ...
    kNetCommCreatePlayerMsg: Any = ...
    kNetCommDeletePlayerMsg: Any = ...
    kNetCommFileDownloadMsg: Any = ...
    kNetCommFileListMsg: Any = ...
    kNetCommLinkToAgeMsg: Any = ...
    kNetCommPlayerListMsg: Any = ...
    kNetCommPublicAgeListMsg: Any = ...
    kNetCommPublicAgeMsg: Any = ...
    kNetCommRegisterAgeMsg: Any = ...
    kNetCoreStatsSummary: Any = ...
    kNetGameMember: Any = ...
    kNetGenericDatabase: Any = ...
    kNetGenericServerTask: Any = ...
    kNetLookupServerGetAgeInfoFromVaultTask: Any = ...
    kNetMember: Any = ...
    kNetMessage: Any = ...
    kNetMsgAccountAuthenticated: Any = ...
    kNetMsgActivePlayerSet: Any = ...
    kNetMsgAlive: Any = ...
    kNetMsgAuthenticateChallenge: Any = ...
    kNetMsgAuthenticateHello: Any = ...
    kNetMsgAuthenticateResponse: Any = ...
    kNetMsgCreatableHelper: Any = ...
    kNetMsgCreatePlayer: Any = ...
    kNetMsgCreatePublicAge: Any = ...
    kNetMsgDeletePlayer: Any = ...
    kNetMsgFindAge: Any = ...
    kNetMsgFindAgeReply: Any = ...
    kNetMsgGameMessage: Any = ...
    kNetMsgGameMessageDirected: Any = ...
    kNetMsgGameStateRequest: Any = ...
    kNetMsgGetPublicAgeList: Any = ...
    kNetMsgGetSharedState: Any = ...
    kNetMsgGroupOwner: Any = ...
    kNetMsgInitialAgeStateSent: Any = ...
    kNetMsgJoinAck: Any = ...
    kNetMsgJoinReq: Any = ...
    kNetMsgLeave: Any = ...
    kNetMsgListenListUpdate: Any = ...
    kNetMsgLoadClone: Any = ...
    kNetMsgMemberInfoHelper: Any = ...
    kNetMsgMemberListHelper: Any = ...
    kNetMsgMemberUpdate: Any = ...
    kNetMsgMembersList: Any = ...
    kNetMsgMembersListReq: Any = ...
    kNetMsgObjStateRequest: Any = ...
    kNetMsgObject: Any = ...
    kNetMsgObjectHelper: Any = ...
    kNetMsgObjectListHelper: Any = ...
    kNetMsgObjectUpdateFilter: Any = ...
    kNetMsgOmnibus: Any = ...
    kNetMsgPagingRoom: Any = ...
    kNetMsgPing: Any = ...
    kNetMsgPlayerCreated: Any = ...
    kNetMsgPlayerPage: Any = ...
    kNetMsgPublicAgeCreated: Any = ...
    kNetMsgPublicAgeList: Any = ...
    kNetMsgPublicAgeRemoved: Any = ...
    kNetMsgPython: Any = ...
    kNetMsgReceiversListHelper: Any = ...
    kNetMsgRelevanceRegions: Any = ...
    kNetMsgRemovePublicAge: Any = ...
    kNetMsgRequestMyVaultPlayerList: Any = ...
    kNetMsgRoomsList: Any = ...
    kNetMsgRoutingInfo: Any = ...
    kNetMsgSDLState: Any = ...
    kNetMsgSDLStateBCast: Any = ...
    kNetMsgServerToClient: Any = ...
    kNetMsgSessionReset: Any = ...
    kNetMsgSetMyActivePlayer: Any = ...
    kNetMsgSetTimeout: Any = ...
    kNetMsgSharedState: Any = ...
    kNetMsgStream: Any = ...
    kNetMsgStreamHelper: Any = ...
    kNetMsgStreamableHelper: Any = ...
    kNetMsgStreamedObject: Any = ...
    kNetMsgTerminated: Any = ...
    kNetMsgTestAndSet: Any = ...
    kNetMsgVault: Any = ...
    kNetMsgVaultPlayerList: Any = ...
    kNetMsgVaultTask: Any = ...
    kNetMsgVoice: Any = ...
    kNetOwnershipMsg: Any = ...
    kNetRoutableMsgOmnibus: Any = ...
    kNetServerApp: Any = ...
    kNetServerMember: Any = ...
    kNetServerMsg: Any = ...
    kNetServerMsgAccountPlayerList: Any = ...
    kNetServerMsgAgentRecoveryData: Any = ...
    kNetServerMsgAgentRecoveryRequest: Any = ...
    kNetServerMsgAuthReply: Any = ...
    kNetServerMsgAuthRequest: Any = ...
    kNetServerMsgBackendRecoveryData: Any = ...
    kNetServerMsgBackendRecoveryRequest: Any = ...
    kNetServerMsgEnvelope: Any = ...
    kNetServerMsgExitProcess: Any = ...
    kNetServerMsgFindAuthServer: Any = ...
    kNetServerMsgFindAuthServerReply: Any = ...
    kNetServerMsgFindProcess: Any = ...
    kNetServerMsgFindServerBase: Any = ...
    kNetServerMsgFindServerReplyBase: Any = ...
    kNetServerMsgFindVaultServer: Any = ...
    kNetServerMsgFindVaultServerReply: Any = ...
    kNetServerMsgFrontendRecoveryData: Any = ...
    kNetServerMsgFrontendRecoveryRequest: Any = ...
    kNetServerMsgHello: Any = ...
    kNetServerMsgHelloReply: Any = ...
    kNetServerMsgPendingMsgs: Any = ...
    kNetServerMsgPing: Any = ...
    kNetServerMsgPlsRoutableMsg: Any = ...
    kNetServerMsgPlsUpdatePlayer: Any = ...
    kNetServerMsgPlsUpdatePlayerReply: Any = ...
    kNetServerMsgProcessFound: Any = ...
    kNetServerMsgRegisterProcess: Any = ...
    kNetServerMsgRegisterServer: Any = ...
    kNetServerMsgRequestAccountPlayerList: Any = ...
    kNetServerMsgRequestPendingMsgs: Any = ...
    kNetServerMsgSaveGameState: Any = ...
    kNetServerMsgServerRegistered: Any = ...
    kNetServerMsgSessionReset: Any = ...
    kNetServerMsgStartProcess: Any = ...
    kNetServerMsgUnregisterProcess: Any = ...
    kNetServerMsgUnregisterServer: Any = ...
    kNetServerMsgVault: Any = ...
    kNetServerMsgVaultCreatePlayer: Any = ...
    kNetServerMsgVaultDeletePlayer: Any = ...
    kNetServerMsgVaultGameState: Any = ...
    kNetServerMsgVaultGameStateLoad: Any = ...
    kNetServerMsgVaultGameStateSave: Any = ...
    kNetServerMsgVaultGameStateSaved: Any = ...
    kNetServerMsgVaultPlayerCreated: Any = ...
    kNetServerMsgVaultRequestGameState: Any = ...
    kNetServerMsgVaultTask: Any = ...
    kNetServerMsgWithContext: Any = ...
    kNetServerSessionInfo: Any = ...
    kNetTransportMember: Any = ...
    kNetVaultDatabase: Any = ...
    kNetVaultServerInitializationTask: Any = ...
    kNetVaultServerNode: Any = ...
    kNetVoiceListMsg: Any = ...
    kNodeChangeMsg: Any = ...
    kNodeCleanupMsg: Any = ...
    kNodeMgr: Any = ...
    kNodeRefMsg: Any = ...
    kNodeRegionModifier: Any = ...
    kNodeRegionMsg: Any = ...
    kNotifyMsg: Any = ...
    kORConditionalObject: Any = ...
    kObjInterface: Any = ...
    kObjRefMsg: Any = ...
    kObjectFlocker: Any = ...
    kObjectInBoxConditionalObject: Any = ...
    kObjectInVolumeAndFacingDetector: Any = ...
    kObjectInVolumeDetector: Any = ...
    kObjectIntersectPlaneConditionalObject: Any = ...
    kOccluder: Any = ...
    kOffsetForceMsg: Any = ...
    kOffsetImpulseMsg: Any = ...
    kOmniApplicator: Any = ...
    kOmniCutoffApplicator: Any = ...
    kOmniLightInfo: Any = ...
    kOmniModifier: Any = ...
    kOmniSqApplicator: Any = ...
    kOneShotMod: Any = ...
    kOneShotMsg: Any = ...
    kOneTimeParticleGenerator: Any = ...
    kPagingRegionModifier: Any = ...
    kPanicLinkMsg: Any = ...
    kPanicLinkRegion: Any = ...
    kParallelIsect: Any = ...
    kParticleAngleApplicator: Any = ...
    kParticleApplicator: Any = ...
    kParticleBulletEffect: Any = ...
    kParticleBulletHitMsg: Any = ...
    kParticleCollisionEffect: Any = ...
    kParticleCollisionEffectBeat: Any = ...
    kParticleCollisionEffectBounce: Any = ...
    kParticleCollisionEffectDie: Any = ...
    kParticleEffect: Any = ...
    kParticleEmitter: Any = ...
    kParticleFadeOutEffect: Any = ...
    kParticleFadeVolumeEffect: Any = ...
    kParticleFlockEffect: Any = ...
    kParticleFlockMsg: Any = ...
    kParticleFollowSystemEffect: Any = ...
    kParticleGenerator: Any = ...
    kParticleKillMsg: Any = ...
    kParticleLifeMaxApplicator: Any = ...
    kParticleLifeMinApplicator: Any = ...
    kParticleLocalWind: Any = ...
    kParticlePPSApplicator: Any = ...
    kParticleSDLMod: Any = ...
    kParticleScaleMaxApplicator: Any = ...
    kParticleScaleMinApplicator: Any = ...
    kParticleSystem: Any = ...
    kParticleTransferMsg: Any = ...
    kParticleUniformWind: Any = ...
    kParticleUpdateMsg: Any = ...
    kParticleVelMaxApplicator: Any = ...
    kParticleVelMinApplicator: Any = ...
    kParticleWindEffect: Any = ...
    kPhysical: Any = ...
    kPhysicalMesh: Any = ...
    kPhysicalModifier: Any = ...
    kPhysicalProperties: Any = ...
    kPhysicalSDLModifier: Any = ...
    kPhysicalSndGroup: Any = ...
    kPickedConditionalObject: Any = ...
    kPickedMsg: Any = ...
    kPickingDetector: Any = ...
    kPipeGeoMakeMsg: Any = ...
    kPipeRTMakeMsg: Any = ...
    kPipeResMakeMsg: Any = ...
    kPipeTexMakeMsg: Any = ...
    kPipeline: Any = ...
    kPiranhaRegionModifier: Any = ...
    kPiranhaRegionMsg: Any = ...
    kPlayerBookMod: Any = ...
    kPlayerInfo: Any = ...
    kPlayerMsg: Any = ...
    kPlayerPageMsg: Any = ...
    kPoint3Controller: Any = ...
    kPointBlend: Any = ...
    kPointChannel: Any = ...
    kPointChannelApplicator: Any = ...
    kPointConstant: Any = ...
    kPointControllerCacheChannel: Any = ...
    kPointControllerChannel: Any = ...
    kPointShadowMaster: Any = ...
    kPointTimeScale: Any = ...
    kPortalDrawable: Any = ...
    kPortalPhysical: Any = ...
    kPosController: Any = ...
    kPostEffectMod: Any = ...
    kPreResourceMsg: Any = ...
    kPreloaderMsg: Any = ...
    kPrintShape: Any = ...
    kProxyDrawMsg: Any = ...
    kPseudoLinkAnimCallbackMsg: Any = ...
    kPseudoLinkAnimTriggerMsg: Any = ...
    kPseudoLinkEffectMsg: Any = ...
    kPuppetBrainMsg: Any = ...
    kPythonFileMod: Any = ...
    kPythonFileModConditionalObject: Any = ...
    kPythonMod: Any = ...
    kPythonMsg: Any = ...
    kPythonNotifyMsg: Any = ...
    kPythonSDLModifier: Any = ...
    kQuatBlend: Any = ...
    kQuatChannel: Any = ...
    kQuatChannelApplicator: Any = ...
    kQuatConstant: Any = ...
    kQuatController: Any = ...
    kQuatPointCombine: Any = ...
    kQuatTimeScale: Any = ...
    kRailCameraMod: Any = ...
    kRandomCommandMod: Any = ...
    kRandomSoundMod: Any = ...
    kRandomTMModifier: Any = ...
    kReceiver: Any = ...
    kRefMsg: Any = ...
    kRegionBase: Any = ...
    kRelativeMatrixChannelApplicator: Any = ...
    kRelevanceMgr: Any = ...
    kRelevanceRegion: Any = ...
    kRemoteAvatarInfoMsg: Any = ...
    kRenderMsg: Any = ...
    kRenderRequestAck: Any = ...
    kRenderRequestMsg: Any = ...
    kRenderTarget: Any = ...
    kReplaceGeometryMsg: Any = ...
    kResManagerHelper: Any = ...
    kResMgrHelperMsg: Any = ...
    kResponderEnableMsg: Any = ...
    kResponderModifier: Any = ...
    kResponderMsg: Any = ...
    kResponderSDLModifier: Any = ...
    kRideAnimatedPhysMsg: Any = ...
    kRidingAnimatedPhysicalDetector: Any = ...
    kRippleShapeMsg: Any = ...
    kRoomLoadNotifyMsg: Any = ...
    kRotController: Any = ...
    kSDLAgeTimeElapsedVar: Any = ...
    kSDLAgeTimeOfDayVar: Any = ...
    kSDLArrayVar: Any = ...
    kSDLBoolVar: Any = ...
    kSDLBufferVar: Any = ...
    kSDLByteVar: Any = ...
    kSDLCharVar: Any = ...
    kSDLDoubleVar: Any = ...
    kSDLDynArrayBoolVar: Any = ...
    kSDLDynArrayBufferVar: Any = ...
    kSDLDynArrayByteVar: Any = ...
    kSDLDynArrayCharVar: Any = ...
    kSDLDynArrayDoubleVar: Any = ...
    kSDLDynArrayFloatVar: Any = ...
    kSDLDynArrayIntVar: Any = ...
    kSDLDynArrayMatrix44Var: Any = ...
    kSDLDynArrayPoint3Var: Any = ...
    kSDLDynArrayQuaternionVar: Any = ...
    kSDLDynArrayRGBAVar: Any = ...
    kSDLDynArrayStringVar: Any = ...
    kSDLDynArrayStructVar: Any = ...
    kSDLDynArrayTimeVar: Any = ...
    kSDLDynArrayUIntVar: Any = ...
    kSDLDynArrayUoidVar: Any = ...
    kSDLDynArrayVector3Var: Any = ...
    kSDLFixedArrayBoolVar: Any = ...
    kSDLFixedArrayBufferVar: Any = ...
    kSDLFixedArrayByteVar: Any = ...
    kSDLFixedArrayCharVar: Any = ...
    kSDLFixedArrayDoubleVar: Any = ...
    kSDLFixedArrayFloatVar: Any = ...
    kSDLFixedArrayIntVar: Any = ...
    kSDLFixedArrayMatrix44Var: Any = ...
    kSDLFixedArrayPoint3Var: Any = ...
    kSDLFixedArrayQuaternionVar: Any = ...
    kSDLFixedArrayRGBAVar: Any = ...
    kSDLFixedArrayStringVar: Any = ...
    kSDLFixedArrayStructVar: Any = ...
    kSDLFixedArrayTimeVar: Any = ...
    kSDLFixedArrayUIntVar: Any = ...
    kSDLFixedArrayUoidVar: Any = ...
    kSDLFixedArrayVector3Var: Any = ...
    kSDLFloatVar: Any = ...
    kSDLGameTimeElapsedVar: Any = ...
    kSDLIntVar: Any = ...
    kSDLMatrix44Var: Any = ...
    kSDLMetaDoubleVar: Any = ...
    kSDLModifier: Any = ...
    kSDLModifierMsg: Any = ...
    kSDLNotificationMsg: Any = ...
    kSDLPoint3Var: Any = ...
    kSDLQuaternionVar: Any = ...
    kSDLRGBAVar: Any = ...
    kSDLStoreMsg: Any = ...
    kSDLStringVar: Any = ...
    kSDLStructVar: Any = ...
    kSDLTimeVar: Any = ...
    kSDLUIntVar: Any = ...
    kSDLUoidVar: Any = ...
    kSDLVar: Any = ...
    kSDLVarChangeMsg: Any = ...
    kSDLVarChangeNotifier: Any = ...
    kSDLVector3Var: Any = ...
    kSatisfiedMsg: Any = ...
    kScalarBlend: Any = ...
    kScalarChannel: Any = ...
    kScalarChannelApplicator: Any = ...
    kScalarConstant: Any = ...
    kScalarController: Any = ...
    kScalarControllerCacheChannel: Any = ...
    kScalarControllerChannel: Any = ...
    kScalarSDLChannel: Any = ...
    kScalarTimeScale: Any = ...
    kScaleController: Any = ...
    kScaleValueController: Any = ...
    kSceneNode: Any = ...
    kSceneObject: Any = ...
    kSecurePreloader: Any = ...
    kSeekPointMod: Any = ...
    kSelfDestructMsg: Any = ...
    kServerGuid: Any = ...
    kServerReplyMsg: Any = ...
    kSetListenerMsg: Any = ...
    kSetNetGroupIDMsg: Any = ...
    kSfxAngleFade: Any = ...
    kSfxDistFade: Any = ...
    kSfxDistShade: Any = ...
    kSfxGlobalShade: Any = ...
    kSfxIntenseAlpha: Any = ...
    kSfxObjDistFade: Any = ...
    kSfxObjDistShade: Any = ...
    kShader: Any = ...
    kShadowCastMsg: Any = ...
    kShadowCaster: Any = ...
    kShadowMaster: Any = ...
    kSharedMesh: Any = ...
    kSharedMeshBCMsg: Any = ...
    kSharedStateMsg: Any = ...
    kShiftMassMsg: Any = ...
    kSimInfluenceMsg: Any = ...
    kSimStateMsg: Any = ...
    kSimSuppressMsg: Any = ...
    kSimpleModifier: Any = ...
    kSimpleParticleGenerator: Any = ...
    kSimplePhys: Any = ...
    kSimplePhysicalMesh: Any = ...
    kSimplePosController: Any = ...
    kSimpleRegionSensor: Any = ...
    kSimpleRotController: Any = ...
    kSimpleScaleController: Any = ...
    kSimpleTMModifier: Any = ...
    kSimulationInterface: Any = ...
    kSimulationMgr: Any = ...
    kSimulationMsg: Any = ...
    kSimulationSynchMsg: Any = ...
    kSingleModMsg: Any = ...
    kSingleModifier: Any = ...
    kSittingModifier: Any = ...
    kSoftVolume: Any = ...
    kSoftVolumeComplex: Any = ...
    kSoftVolumeIntersect: Any = ...
    kSoftVolumeInvert: Any = ...
    kSoftVolumeSimple: Any = ...
    kSoftVolumeUnion: Any = ...
    kSound: Any = ...
    kSoundBuffer: Any = ...
    kSoundMsg: Any = ...
    kSoundSDLModifier: Any = ...
    kSoundVolumeApplicator: Any = ...
    kSpaceTree: Any = ...
    kSpawnMod: Any = ...
    kSpawnModMsg: Any = ...
    kSpawnModifier: Any = ...
    kSpawnRequestMsg: Any = ...
    kSphereIsect: Any = ...
    kSplineEaseCurve: Any = ...
    kSpotInnerApplicator: Any = ...
    kSpotLightInfo: Any = ...
    kSpotModifier: Any = ...
    kSpotOuterApplicator: Any = ...
    kStateDataRecord: Any = ...
    kStereizer: Any = ...
    kStrongSpringConstraintMod: Any = ...
    kSubWorldMsg: Any = ...
    kSubtitleMgr: Any = ...
    kSubtitleMsg: Any = ...
    kSubworldRegionDetector: Any = ...
    kSuperVNodeMgrInitTask: Any = ...
    kSuspendEventMsg: Any = ...
    kSwapSpansRefMsg: Any = ...
    kSwimCircularCurrentRegion: Any = ...
    kSwimDetector: Any = ...
    kSwimMsg: Any = ...
    kSwimRegionInterface: Any = ...
    kSwimStraightCurrentRegion: Any = ...
    kSynchEnableMsg: Any = ...
    kSynchedObject: Any = ...
    kSyslogEventLog: Any = ...
    kTMController: Any = ...
    kTimeMsg: Any = ...
    kTimerCallbackManager: Any = ...
    kTimerCallbackMsg: Any = ...
    kTorqueMsg: Any = ...
    kTransformMsg: Any = ...
    kTransitionMgr: Any = ...
    kTransitionMsg: Any = ...
    kTreeShader: Any = ...
    kTriggerMsg: Any = ...
    kUNUSED_DynamicColorRGB: Any = ...
    kUNUSED_DynamicMatrix33: Any = ...
    kUNUSED_DynamicMatrix44: Any = ...
    kUnionIsect: Any = ...
    kVNodeInitTask: Any = ...
    kVNodeMgrInitializationTask: Any = ...
    kVaultAddNodeRefTask: Any = ...
    kVaultAdminInitializationTask: Any = ...
    kVaultAdminNode: Any = ...
    kVaultAgeInfoInitializationTask: Any = ...
    kVaultAgeInfoListNode: Any = ...
    kVaultAgeInfoNode: Any = ...
    kVaultAgeInitializationTask: Any = ...
    kVaultAgeLinkNode: Any = ...
    kVaultAgeNode: Any = ...
    kVaultCCRInitializationTask: Any = ...
    kVaultCCRNode: Any = ...
    kVaultChronicleNode: Any = ...
    kVaultConnectTask: Any = ...
    kVaultDisconnectTask: Any = ...
    kVaultFetchNodesTask: Any = ...
    kVaultFindNodeTask: Any = ...
    kVaultFolderNode: Any = ...
    kVaultGameServerInitializationTask: Any = ...
    kVaultGameServerNode: Any = ...
    kVaultImageNode: Any = ...
    kVaultMarkerListNode: Any = ...
    kVaultMarkerNode: Any = ...
    kVaultMgrNode: Any = ...
    kVaultNegotiateManifestTask: Any = ...
    kVaultNeighborhoodInitializationTask: Any = ...
    kVaultNode: Any = ...
    kVaultNodeRef: Any = ...
    kVaultNotifyMsg: Any = ...
    kVaultNotifyOperationCallbackTask: Any = ...
    kVaultPlayerInfoListNode: Any = ...
    kVaultPlayerInfoNode: Any = ...
    kVaultPlayerInitializationTask: Any = ...
    kVaultPlayerNode: Any = ...
    kVaultRemoveNodeRefTask: Any = ...
    kVaultSDLNode: Any = ...
    kVaultSaveNodeTask: Any = ...
    kVaultSendNodeTask: Any = ...
    kVaultSystemNode: Any = ...
    kVaultTask: Any = ...
    kVaultTextNoteNode: Any = ...
    kVehicleModifier: Any = ...
    kViewFaceModifier: Any = ...
    kVirtualCam1: Any = ...
    kVirtualCamera: Any = ...
    kVisMgr: Any = ...
    kVisRegion: Any = ...
    kVolActivatorConditionalObject: Any = ...
    kVolumeIsect: Any = ...
    kVolumeSensorConditionalObject: Any = ...
    kVolumeSensorConditionalObjectNoArbitration: Any = ...
    kWarpMsg: Any = ...
    kWaveSet6: Any = ...
    kWaveSet7: Any = ...
    kWaveSetBase: Any = ...
    kWheelConstraintMod: Any = ...
    kWin32GroupedSound: Any = ...
    kWin32LinkSound: Any = ...
    kWin32Sound: Any = ...
    kWin32StaticSound: Any = ...
    kWin32StreamingSound: Any = ...
    kWinAudible: Any = ...
    kWindBoneMod: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def ClassIndex(self, *args, **kwargs) -> Any: ...
    def ClassName(self, *args, **kwargs) -> Any: ...
    def ClassVersion(self, *args, **kwargs) -> Any: ...

class plFadeOpacityMod(plSingleModifier):
    boundsCenter: Any = ...
    fadeDown: Any = ...
    fadeUp: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFilterCoordInterface(plCoordinateInterface):
    filterMask: Any = ...
    kNoMove: Any = ...
    kNoNothing: Any = ...
    kNoRotation: Any = ...
    kNoTransX: Any = ...
    kNoTransY: Any = ...
    kNoTransZ: Any = ...
    refParentLocalToWorld: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFixedWaterState7:
    WaveState: Any = ...
    depthFalloff: Any = ...
    edgeOpacity: Any = ...
    edgeRadius: Any = ...
    envCenter: Any = ...
    envRadius: Any = ...
    envRefresh: Any = ...
    fingerLength: Any = ...
    geoState: Any = ...
    maxAtten: Any = ...
    maxColor: Any = ...
    minAtten: Any = ...
    minColor: Any = ...
    period: Any = ...
    rippleScale: Any = ...
    shoreTint: Any = ...
    specVector: Any = ...
    specularTint: Any = ...
    texState: Any = ...
    waterHeight: Any = ...
    waterOffset: Any = ...
    waterTint: Any = ...
    windDir: Any = ...
    wispiness: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFogEnvironment(hsKeyedObject):
    color: Any = ...
    density: Any = ...
    end: Any = ...
    kExp2Fog: Any = ...
    kExpFog: Any = ...
    kLinearFog: Any = ...
    kNoFog: Any = ...
    start: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFollowMod(plSingleModifier):
    kFollowCamera: Any = ...
    kFollowListener: Any = ...
    kFollowObject: Any = ...
    kFollowPlayer: Any = ...
    kFullTransform: Any = ...
    kPosition: Any = ...
    kPositionX: Any = ...
    kPositionY: Any = ...
    kPositionZ: Any = ...
    kRotate: Any = ...
    leader: Any = ...
    leaderType: Any = ...
    mode: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plFont(hsKeyedObject):
    BPP: Any = ...
    bold: Any = ...
    characters: Any = ...
    firstChar: Any = ...
    flags: Any = ...
    height: Any = ...
    italic: Any = ...
    kFontBold: Any = ...
    kFontItalic: Any = ...
    maxCharHeight: Any = ...
    name: Any = ...
    plCharacter: Any = ...
    size: Any = ...
    stride: Any = ...
    width: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getGlyph(self, *args, **kwargs) -> Any: ...
    def readBitmap(self, *args, **kwargs) -> Any: ...
    def readP2F(self, *args, **kwargs) -> Any: ...
    def writeBitmap(self, *args, **kwargs) -> Any: ...
    def writeP2F(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __len__(self) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class plGBufferCell:
    colorStart: Any = ...
    length: Any = ...
    vtxStart: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plGBufferGroup:
    format: Any = ...
    hasSkinIndices: Any = ...
    kEncoded: Any = ...
    kSkin1Weight: Any = ...
    kSkin2Weights: Any = ...
    kSkin3Weights: Any = ...
    kSkinIndices: Any = ...
    kSkinNoWeights: Any = ...
    kSkinWeightMask: Any = ...
    kUVCountMask: Any = ...
    numUVs: Any = ...
    skinWeights: Any = ...
    stride: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def addCells(self, *args, **kwargs) -> Any: ...
    def addIndices(self, *args, **kwargs) -> Any: ...
    def addVertices(self, *args, **kwargs) -> Any: ...
    def clearCells(self, *args, **kwargs) -> Any: ...
    def clearIndices(self, *args, **kwargs) -> Any: ...
    def clearVertices(self, *args, **kwargs) -> Any: ...
    def delCells(self, *args, **kwargs) -> Any: ...
    def delIndices(self, *args, **kwargs) -> Any: ...
    def delVertices(self, *args, **kwargs) -> Any: ...
    def getCells(self, *args, **kwargs) -> Any: ...
    def getIdxBufferCount(self, *args, **kwargs) -> Any: ...
    def getIdxBufferStorage(self, *args, **kwargs) -> Any: ...
    def getIndices(self, *args, **kwargs) -> Any: ...
    def getNumIdxBuffers(self, *args, **kwargs) -> Any: ...
    def getNumVertBuffers(self, *args, **kwargs) -> Any: ...
    def getVertBufferSize(self, *args, **kwargs) -> Any: ...
    def getVertBufferStorage(self, *args, **kwargs) -> Any: ...
    def getVertices(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plGBufferTriangle:
    center: Any = ...
    index1: Any = ...
    index2: Any = ...
    index3: Any = ...
    spanIndex: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plGBufferVertex:
    UVWs: Any = ...
    color: Any = ...
    normal: Any = ...
    pos: Any = ...
    skinIdx: Any = ...
    skinWeights: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plGenericPhysical(plPhysical):
    LOSDBs: Any = ...
    TMDBuffer: Any = ...
    boundsType: Any = ...
    collideGroup: Any = ...
    dimensions: Any = ...
    friction: Any = ...
    indices: Any = ...
    length: Any = ...
    mass: Any = ...
    memberGroup: Any = ...
    object: Any = ...
    offset: Any = ...
    pos: Any = ...
    radius: Any = ...
    reportGroup: Any = ...
    restitution: Any = ...
    rot: Any = ...
    sceneNode: Any = ...
    soundGroup: Any = ...
    subWorld: Any = ...
    verts: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def calcBoxBounds(self, *args, **kwargs) -> Any: ...
    def calcSphereBounds(self, *args, **kwargs) -> Any: ...
    def getProperty(self, *args, **kwargs) -> Any: ...
    def setProperty(self, *args, **kwargs) -> Any: ...

class plGeometrySpan:
    TempVertex: Any = ...
    baseMatrix: Any = ...
    fogEnvironment: Any = ...
    format: Any = ...
    indices: Any = ...
    kDiffuseFoldedIn: Any = ...
    kFirstInstance: Any = ...
    kInstanced: Any = ...
    kLiteMask: Any = ...
    kLiteMaterial: Any = ...
    kLiteVtxNonPreshaded: Any = ...
    kLiteVtxPreshaded: Any = ...
    kPartialSort: Any = ...
    kPropForceShadow: Any = ...
    kPropNoPreShade: Any = ...
    kPropNoShadow: Any = ...
    kPropNoShadowCast: Any = ...
    kPropReverseSort: Any = ...
    kPropRunTimeLight: Any = ...
    kRequiresBlending: Any = ...
    kSkin1Weight: Any = ...
    kSkin2Weights: Any = ...
    kSkin3Weights: Any = ...
    kSkinIndices: Any = ...
    kSkinNoWeights: Any = ...
    kSkinWeightMask: Any = ...
    kUVCountMask: Any = ...
    kUserOwned: Any = ...
    kVisLOS: Any = ...
    kWaterHeight: Any = ...
    localBounds: Any = ...
    localToWorld: Any = ...
    localUVWChans: Any = ...
    material: Any = ...
    maxBoneIdx: Any = ...
    maxDist: Any = ...
    minDist: Any = ...
    numIndices: Any = ...
    numMatrices: Any = ...
    numVertices: Any = ...
    penBoneIdx: Any = ...
    permaLights: Any = ...
    permaProjs: Any = ...
    props: Any = ...
    vertices: Any = ...
    waterHeight: Any = ...
    worldBounds: Any = ...
    worldToLocal: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addPermaLight(self, *args, **kwargs) -> Any: ...
    def addPermaProj(self, *args, **kwargs) -> Any: ...
    def clearPermaLight(self, *args, **kwargs) -> Any: ...
    def clearPermaProj(self, *args, **kwargs) -> Any: ...
    def delPermaLight(self, *args, **kwargs) -> Any: ...
    def delPermaProj(self, *args, **kwargs) -> Any: ...

class plGrassShaderMod(plModifier):
    material: Any = ...
    waves: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plGrassWave:
    dirX: Any = ...
    dirY: Any = ...
    dist: Any = ...
    speed: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plHKSubWorld(plObjInterface):
    gravity: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plIcicle(plVertexSpan):
    IBufferIdx: Any = ...
    ILength: Any = ...
    IStartIdx: Any = ...
    sortData: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plImageLibMod(plSingleModifier):
    images: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addImage(self, *args, **kwargs) -> Any: ...
    def clearImages(self, *args, **kwargs) -> Any: ...
    def delImage(self, *args, **kwargs) -> Any: ...

class plInterfaceInfoModifier(plSingleModifier):
    intfKeys: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addIntfKey(self, *args, **kwargs) -> Any: ...
    def clearIntfKeys(self, *args, **kwargs) -> Any: ...
    def delIntfKey(self, *args, **kwargs) -> Any: ...

class plKey:
    id: Any = ...
    location: Any = ...
    mask: Any = ...
    name: Any = ...
    object: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def exists(self, *args, **kwargs) -> Any: ...
    def isLoaded(self, *args, **kwargs) -> Any: ...
    def orderAfter(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def readUoid(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def writeUoid(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...

class plKeyPressConditionalObject(plConditionalObject):
    keyEvent: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLODDist:
    max: Any = ...
    min: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plLadderModifier(plSingleModifier):
    bottomLogic: Any = ...
    bottomPos: Any = ...
    exitBottom: Any = ...
    exitTop: Any = ...
    mainLogic: Any = ...
    topLogic: Any = ...
    topPos: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayer(plLayerInterface):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerAVI(plLayerMovie):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerAnimation(plLayerAnimationBase):
    timeConvert: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerAnimationBase(plLayerInterface):
    ambientCtl: Any = ...
    opacityCtl: Any = ...
    preshadeCtl: Any = ...
    runtimeCtl: Any = ...
    specularCtl: Any = ...
    transformCtl: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerBink(plLayerMovie):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerDepth(plLayer):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerInterface(plSynchedObject):
    LODBias: Any = ...
    UVWSrc: Any = ...
    ambient: Any = ...
    bumpEnvTransform: Any = ...
    kAllDirty: Any = ...
    kAmbientColor: Any = ...
    kBumpEnvXfm: Any = ...
    kLODBias: Any = ...
    kOpacity: Any = ...
    kPixelShader: Any = ...
    kPreshadeColor: Any = ...
    kRuntimeColor: Any = ...
    kSpecularColor: Any = ...
    kSpecularPower: Any = ...
    kState: Any = ...
    kTexture: Any = ...
    kTransform: Any = ...
    kUVWIdxMask: Any = ...
    kUVWNormal: Any = ...
    kUVWPassThru: Any = ...
    kUVWPosition: Any = ...
    kUVWReflect: Any = ...
    kUVWSrc: Any = ...
    kVertexShader: Any = ...
    opacity: Any = ...
    pixelShader: Any = ...
    preshade: Any = ...
    runtime: Any = ...
    specular: Any = ...
    specularPower: Any = ...
    state: Any = ...
    texture: Any = ...
    transform: Any = ...
    underLay: Any = ...
    vertexShader: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerLinkAnimation(plLayerAnimation):
    leavingAge: Any = ...
    linkKey: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerMovie(plLayerAnimation):
    movieName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLayerSDLAnimation(plLayerAnimation):
    varName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLeafController(plController):
    easeControllers: Any = ...
    keys: Any = ...
    type: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def CompactToLeafController(self, *args, **kwargs) -> Any: ...
    def ExpandToKeyController(self, *args, **kwargs) -> Any: ...
    def hasEaseControllers(self, *args, **kwargs) -> Any: ...
    def hasKeys(self, *args, **kwargs) -> Any: ...

class plLightAmbientApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLightDiffuseApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLightInfo(plObjInterface):
    ambient: Any = ...
    diffuse: Any = ...
    kLPCastShadows: Any = ...
    kLPForceProj: Any = ...
    kLPHasIncludes: Any = ...
    kLPHasSpecular: Any = ...
    kLPIncludesChars: Any = ...
    kLPMovable: Any = ...
    kLPObsolete: Any = ...
    kLPOverAll: Any = ...
    kLPShadowLightGroup: Any = ...
    kLPShadowOnly: Any = ...
    lightToLocal: Any = ...
    lightToWorld: Any = ...
    localToLight: Any = ...
    projection: Any = ...
    sceneNode: Any = ...
    softVolume: Any = ...
    specular: Any = ...
    visRegions: Any = ...
    worldToLight: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addVisRegion(self, *args, **kwargs) -> Any: ...
    def clearVisRegions(self, *args, **kwargs) -> Any: ...

class plLightSpecularApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLimitedDirLightInfo(plDirectionalLightInfo):
    depth: Any = ...
    height: Any = ...
    width: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLineFollowMod(plMultiModifier):
    followFlags: Any = ...
    followMode: Any = ...
    kFollowCamera: Any = ...
    kFollowListener: Any = ...
    kFollowLocalAvatar: Any = ...
    kFollowObject: Any = ...
    kForceToLine: Any = ...
    kFullMatrix: Any = ...
    kNone: Any = ...
    kOffset: Any = ...
    kOffsetAng: Any = ...
    kOffsetClamp: Any = ...
    kOffsetFeet: Any = ...
    kSearchPopPos: Any = ...
    kSpeedClamp: Any = ...
    offset: Any = ...
    offsetClamp: Any = ...
    path: Any = ...
    pathParent: Any = ...
    refObj: Any = ...
    speedClamp: Any = ...
    stereizers: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addStereizer(self, *args, **kwargs) -> Any: ...
    def clearStereizers(self, *args, **kwargs) -> Any: ...
    def delStereizer(self, *args, **kwargs) -> Any: ...

class plLinkToAgeMsg(plMessage):
    ageLink: Any = ...
    linkEffects: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLocalPlayerInBoxConditionalObject(plConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLocalPlayerIntersectPlaneConditionalObject(plConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plLocation:
    flags: Any = ...
    kBuiltIn: Any = ...
    kItinerant: Any = ...
    kLocalOnly: Any = ...
    kReserved: Any = ...
    kVolatile: Any = ...
    page: Any = ...
    prefix: Any = ...
    version: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def invalidate(self, *args, **kwargs) -> Any: ...
    def isGlobal(self, *args, **kwargs) -> Any: ...
    def isItinerant(self, *args, **kwargs) -> Any: ...
    def isReserved(self, *args, **kwargs) -> Any: ...
    def isValid(self, *args, **kwargs) -> Any: ...
    def isVirtual(self, *args, **kwargs) -> Any: ...
    def parse(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def setVirtual(self, *args, **kwargs) -> Any: ...
    def unparse(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...

class plLogicModBase(plSingleModifier):
    commands: Any = ...
    disabled: Any = ...
    kLocalElement: Any = ...
    kMultiTrigger: Any = ...
    kOneShot: Any = ...
    kRequestingTrigger: Any = ...
    kReset: Any = ...
    kTriggered: Any = ...
    kTypeActivator: Any = ...
    notify: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addCommand(self, *args, **kwargs) -> Any: ...
    def clearCommands(self, *args, **kwargs) -> Any: ...
    def delCommand(self, *args, **kwargs) -> Any: ...
    def getLogicFlag(self, *args, **kwargs) -> Any: ...
    def setLogicFlag(self, *args, **kwargs) -> Any: ...

class plLogicModifier(plLogicModBase):
    conditions: Any = ...
    cursor: Any = ...
    parent: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addCondition(self, *args, **kwargs) -> Any: ...
    def clearConditions(self, *args, **kwargs) -> Any: ...
    def delCondition(self, *args, **kwargs) -> Any: ...

class plMaintainersMarkerModifier(plMultiModifier):
    calibration: Any = ...
    kBroken: Any = ...
    kCalibrated: Any = ...
    kRepaired: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrix33Controller(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrix44Controller(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixBlend(plMatrixChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixChannel(plAGChannel):
    affine: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixChannelApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixConstant(plMatrixChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixControllerCacheChannel(plMatrixChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixControllerChannel(plMatrixChannel):
    controller: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixDelayedCorrectionApplicator(plMatrixChannelApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixDifferenceApp(plMatrixChannelApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMatrixTimeScale(plMatrixChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMessage(plCreatable):
    BCastFlags: Any = ...
    kBCastByExactType: Any = ...
    kBCastByType: Any = ...
    kBCastNone: Any = ...
    kCCRSendToAllPlayers: Any = ...
    kClearAfterBCast: Any = ...
    kLocalPropagate: Any = ...
    kMsgWatch: Any = ...
    kNetAllowInterAge: Any = ...
    kNetCreatedRemotely: Any = ...
    kNetForce: Any = ...
    kNetNonDeterministic: Any = ...
    kNetNonLocal: Any = ...
    kNetPropagate: Any = ...
    kNetSendUnreliable: Any = ...
    kNetSent: Any = ...
    kNetStartCascade: Any = ...
    kNetUseRelevanceRegions: Any = ...
    kPropagateToChildren: Any = ...
    kPropagateToModifiers: Any = ...
    receivers: Any = ...
    sender: Any = ...
    timeStamp: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addReceiver(self, *args, **kwargs) -> Any: ...
    def clearReceivers(self, *args, **kwargs) -> Any: ...
    def delReceiver(self, *args, **kwargs) -> Any: ...

class plMessageWithCallbacks(plMessage):
    callbacks: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addCallback(self, *args, **kwargs) -> Any: ...
    def clearCallbacks(self, *args, **kwargs) -> Any: ...
    def delCallback(self, *args, **kwargs) -> Any: ...

class plMipmap(plBitmap):
    height: Any = ...
    imageData: Any = ...
    numLevels: Any = ...
    width: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def CompressImage(self, *args, **kwargs) -> Any: ...
    def DecompressImage(self, *args, **kwargs) -> Any: ...
    def extractAlphaData(self, *args, **kwargs) -> Any: ...
    def extractColorData(self, *args, **kwargs) -> Any: ...
    def getLevel(self, *args, **kwargs) -> Any: ...
    def getLevelHeight(self, *args, **kwargs) -> Any: ...
    def getLevelWidth(self, *args, **kwargs) -> Any: ...
    def isAlphaJPEG(self, *args, **kwargs) -> Any: ...
    def isImageJPEG(self, *args, **kwargs) -> Any: ...
    def readData(self, *args, **kwargs) -> Any: ...
    def setAlphaData(self, *args, **kwargs) -> Any: ...
    def setAlphaJPEG(self, *args, **kwargs) -> Any: ...
    def setColorData(self, *args, **kwargs) -> Any: ...
    def setImageJPEG(self, *args, **kwargs) -> Any: ...
    def setLevel(self, *args, **kwargs) -> Any: ...
    def setRawImage(self, *args, **kwargs) -> Any: ...
    def writeData(self, *args, **kwargs) -> Any: ...

class plMobileOccluder(plOccluder):
    localBounds: Any = ...
    localToWorld: Any = ...
    worldToLocal: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plModifier(plSynchedObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plMsgForwarder(hsKeyedObject):
    forwardKeys: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addForwardKey(self, *args, **kwargs) -> Any: ...
    def clearForwardKeys(self, *args, **kwargs) -> Any: ...
    def delForwardKey(self, *args, **kwargs) -> Any: ...

class plMultiModifier(plModifier):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getFlag(self, *args, **kwargs) -> Any: ...
    def setFlag(self, *args, **kwargs) -> Any: ...

class plMultistageBehMod(plSingleModifier):
    freezePhys: Any = ...
    receivers: Any = ...
    reverseFBControlsOnRelease: Any = ...
    smartSeek: Any = ...
    stages: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addReceiver(self, *args, **kwargs) -> Any: ...
    def addStage(self, *args, **kwargs) -> Any: ...
    def clearReceivers(self, *args, **kwargs) -> Any: ...
    def clearStages(self, *args, **kwargs) -> Any: ...
    def delReceiver(self, *args, **kwargs) -> Any: ...
    def delStage(self, *args, **kwargs) -> Any: ...

class plNotifyMsg(plMessage):
    events: Any = ...
    id: Any = ...
    kActivator: Any = ...
    kNotifySelf: Any = ...
    kResponderChangeState: Any = ...
    kResponderFF: Any = ...
    kVarNotification: Any = ...
    state: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addEvent(self, *args, **kwargs) -> Any: ...
    def clearEvents(self, *args, **kwargs) -> Any: ...
    def delEvent(self, *args, **kwargs) -> Any: ...

class plORConditionalObject(plConditionalObject):
    children: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addChild(self, *args, **kwargs) -> Any: ...
    def clearChildren(self, *args, **kwargs) -> Any: ...
    def delChild(self, *args, **kwargs) -> Any: ...

class plObjInterface(plSynchedObject):
    kDisable: Any = ...
    owner: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getProperty(self, *args, **kwargs) -> Any: ...
    def setProperty(self, *args, **kwargs) -> Any: ...

class plObjectInBoxConditionalObject(plConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plObjectInVolumeAndFacingDetector(plObjectInVolumeDetector):
    facingTolerance: Any = ...
    needWalkingForward: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plObjectInVolumeDetector(plCollisionDetector):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plObjectIntersectPlaneConditionalObject(plConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plOccluder(plObjInterface):
    polys: Any = ...
    priority: Any = ...
    sceneNode: Any = ...
    visRegions: Any = ...
    worldBounds: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addPoly(self, *args, **kwargs) -> Any: ...
    def addVisRegion(self, *args, **kwargs) -> Any: ...
    def clearPolys(self, *args, **kwargs) -> Any: ...
    def clearVisRegions(self, *args, **kwargs) -> Any: ...
    def delPoly(self, *args, **kwargs) -> Any: ...
    def delVisRegion(self, *args, **kwargs) -> Any: ...

class plOmniApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plOmniCutoffApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plOmniLightInfo(plLightInfo):
    attenConst: Any = ...
    attenCutoff: Any = ...
    attenLinear: Any = ...
    attenQuadratic: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plOmniSqApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plOneShotMod(plMultiModifier):
    animName: Any = ...
    drivable: Any = ...
    noSeek: Any = ...
    reversable: Any = ...
    seekDuration: Any = ...
    smartSeek: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plOneShotMsg(plResponderMsg):
    callbacks: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addCallback(self, *args, **kwargs) -> Any: ...
    def clearCallbacks(self, *args, **kwargs) -> Any: ...
    def delCallback(self, *args, **kwargs) -> Any: ...

class plOneTimeParticleGenerator(plParticleGenerator):
    XSize: Any = ...
    YSize: Any = ...
    direction: Any = ...
    partRadsPerSecRange: Any = ...
    position: Any = ...
    scaleMax: Any = ...
    scaleMin: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPageInfo:
    age: Any = ...
    chapter: Any = ...
    flags: Any = ...
    kBasicChecksum: Any = ...
    kChecksumMask: Any = ...
    kOldDataChecksum: Any = ...
    kOldIdxChecksum: Any = ...
    kPartialPatchFile: Any = ...
    kPatchFlags: Any = ...
    kPatchHeaderOnly: Any = ...
    location: Any = ...
    page: Any = ...
    releaseVersion: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def getFilename(self, *args, **kwargs) -> Any: ...
    def isValid(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def writeSums(self, *args, **kwargs) -> Any: ...

class plPanicLinkRegion(plCollisionDetector):
    playLinkOutAnim: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleAngleApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleCollisionEffect(plParticleEffect):
    sceneObj: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleCollisionEffectBeat(plParticleCollisionEffect):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleCollisionEffectBounce(plParticleCollisionEffect):
    bounce: Any = ...
    friction: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleCollisionEffectDie(plParticleCollisionEffect):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleEffect(hsKeyedObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleEmitter(plCreatable):
    color: Any = ...
    generator: Any = ...
    kBorrowedGenerator: Any = ...
    kMatIsEmissive: Any = ...
    kNeedsUpdate: Any = ...
    kNormalDynamicMask: Any = ...
    kNormalFromCenter: Any = ...
    kNormalNearestLight: Any = ...
    kNormalPrecalcMask: Any = ...
    kNormalUp: Any = ...
    kNormalVelUpVel: Any = ...
    kNormalViewFacing: Any = ...
    kOnReserve: Any = ...
    kOrientationMask: Any = ...
    kOrientationUp: Any = ...
    kOrientationVelocityBased: Any = ...
    kOrientationVelocityFlow: Any = ...
    kOrientationVelocityMask: Any = ...
    kOrientationVelocityStretch: Any = ...
    kOverrideLocalToWorld: Any = ...
    maxParticles: Any = ...
    miscFlags: Any = ...
    spanIndex: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleFadeOutEffect(plParticleEffect):
    ignoreZ: Any = ...
    length: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleFadeVolumeEffect(plParticleEffect):
    ignoreZ: Any = ...
    length: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleFlockEffect(plParticleEffect):
    avgVelStr: Any = ...
    dissenterTarget: Any = ...
    fullChaseDistSq: Any = ...
    goalChaseStr: Any = ...
    goalDistSq: Any = ...
    goalOrbitStr: Any = ...
    infAvgRadSq: Any = ...
    infRepRadSq: Any = ...
    maxChaseSpeed: Any = ...
    maxOrbitSpeed: Any = ...
    maxParticles: Any = ...
    repDirStr: Any = ...
    targetOffset: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleFollowSystemEffect(plParticleEffect):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleGenerator(plCreatable):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleLifeMaxApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleLifeMinApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleLocalWind(plParticleWindEffect):
    scale: Any = ...
    speed: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticlePPSApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleScaleMaxApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleScaleMinApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleSpan(plIcicle):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleSystem(plModifier):
    XTiles: Any = ...
    YTiles: Any = ...
    accel: Any = ...
    ambientCtl: Any = ...
    constraints: Any = ...
    diffuseCtl: Any = ...
    drag: Any = ...
    effects: Any = ...
    forces: Any = ...
    heightCtl: Any = ...
    kEffectConstraint: Any = ...
    kEffectForce: Any = ...
    kEffectMisc: Any = ...
    kParticleSystemAlwaysUpdate: Any = ...
    material: Any = ...
    maxEmitters: Any = ...
    maxTotalParticles: Any = ...
    numValidEmitters: Any = ...
    opacityCtl: Any = ...
    permaLights: Any = ...
    preSim: Any = ...
    widthCtl: Any = ...
    windMult: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addConstraint(self, *args, **kwargs) -> Any: ...
    def addEffect(self, *args, **kwargs) -> Any: ...
    def addEmitter(self, *args, **kwargs) -> Any: ...
    def addForce(self, *args, **kwargs) -> Any: ...
    def addPermaLight(self, *args, **kwargs) -> Any: ...
    def allocEmitters(self, *args, **kwargs) -> Any: ...
    def clearConstraints(self, *args, **kwargs) -> Any: ...
    def clearEffects(self, *args, **kwargs) -> Any: ...
    def clearEmitters(self, *args, **kwargs) -> Any: ...
    def clearForces(self, *args, **kwargs) -> Any: ...
    def clearPermaLights(self, *args, **kwargs) -> Any: ...
    def delConstraint(self, *args, **kwargs) -> Any: ...
    def delEffect(self, *args, **kwargs) -> Any: ...
    def delEmitter(self, *args, **kwargs) -> Any: ...
    def delForce(self, *args, **kwargs) -> Any: ...
    def delPermaLight(self, *args, **kwargs) -> Any: ...
    def getEmitter(self, *args, **kwargs) -> Any: ...
    def setEmitter(self, *args, **kwargs) -> Any: ...

class plParticleUniformWind(plParticleWindEffect):
    freqMax: Any = ...
    freqMin: Any = ...
    freqRate: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleVelMaxApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleVelMinApplicator(plParticleApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plParticleWindEffect(plParticleEffect):
    constancy: Any = ...
    dir: Any = ...
    horizontal: Any = ...
    refDir: Any = ...
    strength: Any = ...
    swirl: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPhysical(plSynchedObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPickingDetector(plDetectorModifier):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPoint3Controller(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plPointBlend(plPointChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointChannel(plAGChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointChannelApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointConstant(plPointChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointControllerCacheChannel(plPointChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointControllerChannel(plPointChannel):
    controller: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointShadowMaster(plShadowMaster):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPointTimeScale(plPointChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPosController(plController):
    kCompound: Any = ...
    kSimple: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPostEffectMod(plSingleModifier):
    defaultC2W: Any = ...
    defaultW2C: Any = ...
    fovX: Any = ...
    fovY: Any = ...
    hither: Any = ...
    nodeKey: Any = ...
    yon: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPrintShape(plObjInterface):
    height: Any = ...
    length: Any = ...
    width: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plPythonFileMod(plMultiModifier):
    filename: Any = ...
    parameters: Any = ...
    receivers: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addParameter(self, *args, **kwargs) -> Any: ...
    def addReceiver(self, *args, **kwargs) -> Any: ...
    def clearParameters(self, *args, **kwargs) -> Any: ...
    def clearReceivers(self, *args, **kwargs) -> Any: ...

class plPythonParameter:
    id: Any = ...
    kActivator: Any = ...
    kAnimation: Any = ...
    kAnimationName: Any = ...
    kBehavior: Any = ...
    kBlowerComponent: Any = ...
    kBoolean: Any = ...
    kClusterComponent: Any = ...
    kDynamicText: Any = ...
    kExcludeRegion: Any = ...
    kFloat: Any = ...
    kGUIDialog: Any = ...
    kGUIPopUpMenu: Any = ...
    kGUISkin: Any = ...
    kGlobalSDLVar: Any = ...
    kGrassShaderComponent: Any = ...
    kInt: Any = ...
    kMaterial: Any = ...
    kMaterialAnimation: Any = ...
    kNone: Any = ...
    kResponder: Any = ...
    kSceneObject: Any = ...
    kSceneObjectList: Any = ...
    kString: Any = ...
    kSubtitle: Any = ...
    kSwimCurrentInterface: Any = ...
    kWaterComponent: Any = ...
    value: Any = ...
    valueType: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plQuatBlend(plQuatChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plQuatChannel(plAGChannel):
    result: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plQuatChannelApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plQuatConstant(plQuatChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plQuatController(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plQuatPointCombine(plMatrixChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plQuatTimeScale(plQuatChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRailCameraMod(plLineFollowMod):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRelativeMatrixChannelApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRenderLevel:
    kAvatarRendMinorLevel: Any = ...
    kBlendRendMajorLevel: Any = ...
    kDefRendMajorLevel: Any = ...
    kDefRendMinorLevel: Any = ...
    kFBMajorLevel: Any = ...
    kLateRendMajorLevel: Any = ...
    kMajorShift: Any = ...
    kMinorLevelMask: Any = ...
    kOpaqueMajorLevel: Any = ...
    kOpaqueMinorLevel: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRenderTarget(plBitmap):
    ZDepth: Any = ...
    height: Any = ...
    proportionalViewport: Any = ...
    stencilDepth: Any = ...
    viewportBottom: Any = ...
    viewportLeft: Any = ...
    viewportRight: Any = ...
    viewportTop: Any = ...
    width: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plResManager:
    def __init__(self, *args, **kwargs) -> None: ...
    def AddAge(self, *args, **kwargs) -> Any: ...
    def AddObject(self, *args, **kwargs) -> Any: ...
    def AddPage(self, *args, **kwargs) -> Any: ...
    def ChangeLocation(self, *args, **kwargs) -> Any: ...
    def DelAge(self, *args, **kwargs) -> Any: ...
    def DelObject(self, *args, **kwargs) -> Any: ...
    def DelPage(self, *args, **kwargs) -> Any: ...
    def FindAge(self, *args, **kwargs) -> Any: ...
    def FindPage(self, *args, **kwargs) -> Any: ...
    def ReadAge(self, *args, **kwargs) -> Any: ...
    def ReadCreatable(self, *args, **kwargs) -> Any: ...
    def ReadCreatableStub(self, *args, **kwargs) -> Any: ...
    def ReadPage(self, *args, **kwargs) -> Any: ...
    def UnloadAge(self, *args, **kwargs) -> Any: ...
    def UnloadPage(self, *args, **kwargs) -> Any: ...
    def WriteAge(self, *args, **kwargs) -> Any: ...
    def WriteCreatable(self, *args, **kwargs) -> Any: ...
    def WritePage(self, *args, **kwargs) -> Any: ...
    def countKeys(self, *args, **kwargs) -> Any: ...
    def getKeys(self, *args, **kwargs) -> Any: ...
    def getLocations(self, *args, **kwargs) -> Any: ...
    def getObject(self, *args, **kwargs) -> Any: ...
    def getSceneNode(self, *args, **kwargs) -> Any: ...
    def getTypes(self, *args, **kwargs) -> Any: ...
    def getVer(self, *args, **kwargs) -> Any: ...
    def readKey(self, *args, **kwargs) -> Any: ...
    def readUoid(self, *args, **kwargs) -> Any: ...
    def setVer(self, *args, **kwargs) -> Any: ...
    def writeKey(self, *args, **kwargs) -> Any: ...
    def writeUoid(self, *args, **kwargs) -> Any: ...

class plResponderEnableMsg(plMessage):
    enable: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plResponderModifier(plSingleModifier):
    curState: Any = ...
    enabled: Any = ...
    flags: Any = ...
    kDetectTrigger: Any = ...
    kDetectUnTrigger: Any = ...
    kSkipFFSound: Any = ...
    states: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addState(self, *args, **kwargs) -> Any: ...
    def clearStates(self, *args, **kwargs) -> Any: ...
    def delState(self, *args, **kwargs) -> Any: ...

class plResponderModifier_Cmd:
    msg: Any = ...
    waitOn: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plResponderModifier_State:
    commands: Any = ...
    numCallbacks: Any = ...
    switchToState: Any = ...
    waitToCmd: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def addCommand(self, *args, **kwargs) -> Any: ...
    def clearCommands(self, *args, **kwargs) -> Any: ...
    def delCommand(self, *args, **kwargs) -> Any: ...

class plResponderMsg(plMessage):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRideAnimatedPhysMsg(plMessage):
    entering: Any = ...
    region: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRidingAnimatedPhysicalDetector(plSimpleRegionSensor):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plRotController(plController):
    kCompound: Any = ...
    kSimple: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSDLMgr:
    descriptorNames: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def clearDescriptors(self, *args, **kwargs) -> Any: ...
    def getDescriptor(self, *args, **kwargs) -> Any: ...
    def readDescriptors(self, *args, **kwargs) -> Any: ...

class plScalarBlend(plScalarChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarChannel(plAGChannel):
    result: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarChannelApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarConstant(plScalarChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarController(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarControllerCacheChannel(plScalarChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarControllerChannel(plScalarChannel):
    controller: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarSDLChannel(plScalarChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScalarTimeScale(plScalarChannel):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScaleController(plController):
    kSimple: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plScaleValueController(plLeafController):
    def __init__(self, *args, **kwargs) -> None: ...

class plSceneNode(hsKeyedObject):
    poolObjects: Any = ...
    sceneObjects: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addPoolObject(self, *args, **kwargs) -> Any: ...
    def addPoolObjects(self, *args, **kwargs) -> Any: ...
    def addSceneObject(self, *args, **kwargs) -> Any: ...
    def addSceneObjects(self, *args, **kwargs) -> Any: ...
    def clear(self, *args, **kwargs) -> Any: ...

class plSceneObject(plSynchedObject):
    audio: Any = ...
    coord: Any = ...
    draw: Any = ...
    interfaces: Any = ...
    modifiers: Any = ...
    sceneNode: Any = ...
    sim: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addInterface(self, *args, **kwargs) -> Any: ...
    def addModifier(self, *args, **kwargs) -> Any: ...
    def clearInterfaces(self, *args, **kwargs) -> Any: ...
    def clearModifiers(self, *args, **kwargs) -> Any: ...
    def delInterface(self, *args, **kwargs) -> Any: ...
    def delModifier(self, *args, **kwargs) -> Any: ...

class plSeekPointMod(plMultiModifier):
    name: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plServerGuid:
    __hash__: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __delitem__(self, other) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __len__(self) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class plShader(hsKeyedObject):
    constants: Any = ...
    id: Any = ...
    input: Any = ...
    kNumShaders: Any = ...
    kUnregistered: Any = ...
    output: Any = ...
    ps_BiasNormals: Any = ...
    ps_CaddAAdd: Any = ...
    ps_CaddAMult: Any = ...
    ps_CaddAbase: Any = ...
    ps_CalphaAMult: Any = ...
    ps_CalphaAadd: Any = ...
    ps_CalphaAbase: Any = ...
    ps_CbaseAbase: Any = ...
    ps_CmultAAdd: Any = ...
    ps_CmultAMult: Any = ...
    ps_CmultAbase: Any = ...
    ps_CompCosines: Any = ...
    ps_GrassShader: Any = ...
    ps_MoreCosines: Any = ...
    ps_ShoreLeave6: Any = ...
    ps_WaveDecEnv: Any = ...
    ps_WaveFixed: Any = ...
    ps_WaveGraph: Any = ...
    ps_WaveGrid: Any = ...
    ps_WaveRip: Any = ...
    vs_BiasNormals: Any = ...
    vs_CompCosines: Any = ...
    vs_GrassShader: Any = ...
    vs_ShoreLeave6: Any = ...
    vs_ShoreLeave7: Any = ...
    vs_WaveDec1Lay: Any = ...
    vs_WaveDec1Lay_7: Any = ...
    vs_WaveDec2Lay11: Any = ...
    vs_WaveDec2Lay11_7: Any = ...
    vs_WaveDec2Lay12: Any = ...
    vs_WaveDec2Lay12_7: Any = ...
    vs_WaveDecEnv: Any = ...
    vs_WaveDecEnv_7: Any = ...
    vs_WaveFixedFin6: Any = ...
    vs_WaveFixedFin7: Any = ...
    vs_WaveGraph2: Any = ...
    vs_WaveGridFin: Any = ...
    vs_WaveRip: Any = ...
    vs_WaveRip7: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plShaderConst:
    W: Any = ...
    X: Any = ...
    Y: Any = ...
    Z: Any = ...
    alpha: Any = ...
    blue: Any = ...
    green: Any = ...
    red: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class plShadowCaster(plMultiModifier):
    attenScale: Any = ...
    blurScale: Any = ...
    boost: Any = ...
    castFlags: Any = ...
    kLimitRes: Any = ...
    kNone: Any = ...
    kPerspective: Any = ...
    kSelfShadow: Any = ...
    maxOpacity: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plShadowMaster(plObjInterface):
    attenDist: Any = ...
    kDisable: Any = ...
    kNumProps: Any = ...
    kSelfShadow: Any = ...
    maxDist: Any = ...
    maxSize: Any = ...
    minDist: Any = ...
    minSize: Any = ...
    power: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSharedMesh(hsKeyedObject):
    flags: Any = ...
    kDontSaveMorphState: Any = ...
    kLayer0GlobalToMod: Any = ...
    morphSet: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addSpan(self, *args, **kwargs) -> Any: ...
    def clearSpans(self, *args, **kwargs) -> Any: ...
    def delSpan(self, *args, **kwargs) -> Any: ...

class plSimDefs:
    kBoxBounds: Any = ...
    kCylinderBounds: Any = ...
    kExplicitBounds: Any = ...
    kGroupAvatar: Any = ...
    kGroupDetector: Any = ...
    kGroupDynamic: Any = ...
    kGroupLOSOnly: Any = ...
    kGroupStatic: Any = ...
    kHullBounds: Any = ...
    kLOSDBAvatarWalkable: Any = ...
    kLOSDBCameraBlockers: Any = ...
    kLOSDBCustom: Any = ...
    kLOSDBLocalAvatar: Any = ...
    kLOSDBNone: Any = ...
    kLOSDBShootableItems: Any = ...
    kLOSDBSwimRegion: Any = ...
    kLOSDBUIBlockers: Any = ...
    kLOSDBUIItems: Any = ...
    kProxyBounds: Any = ...
    kSphereBounds: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSimSuppressMsg(plSimulationMsg):
    suppress: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSimpleParticleGenerator(plParticleGenerator):
    XSize: Any = ...
    YSize: Any = ...
    angleRange: Any = ...
    genLife: Any = ...
    initPitch: Any = ...
    initPos: Any = ...
    initYaw: Any = ...
    partLifeMax: Any = ...
    partLifeMin: Any = ...
    partMassRange: Any = ...
    partRadsPerSecRange: Any = ...
    particlesPerSecond: Any = ...
    scaleMax: Any = ...
    scaleMin: Any = ...
    velMax: Any = ...
    velMin: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSimplePosController(plPosController):
    position: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plSimpleRegionSensor(plSingleModifier):
    enterMsg: Any = ...
    exitMsg: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSimpleRotController(plRotController):
    rot: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plSimpleScaleController(plScaleController):
    value: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plSimulationInterface(plObjInterface):
    kAvAnimPushable: Any = ...
    kCameraAvoidObject: Any = ...
    kNoOwnershipChange: Any = ...
    kNoSynchronize: Any = ...
    kPassive: Any = ...
    kPhysAnim: Any = ...
    kPinned: Any = ...
    kRotationForces: Any = ...
    kStartInactive: Any = ...
    kSuppressed: Any = ...
    kUpright: Any = ...
    kWarp: Any = ...
    kWeightless: Any = ...
    physical: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSimulationMsg(plMessage):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSingleModifier(plModifier):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getFlag(self, *args, **kwargs) -> Any: ...
    def setFlag(self, *args, **kwargs) -> Any: ...

class plSittingModifier(plSingleModifier):
    kApproachFront: Any = ...
    kApproachLeft: Any = ...
    kApproachMask: Any = ...
    kApproachRear: Any = ...
    kApproachRight: Any = ...
    kDisableForward: Any = ...
    miscFlags: Any = ...
    notifyKeys: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addNotifyKey(self, *args, **kwargs) -> Any: ...
    def clearNotifyKeys(self, *args, **kwargs) -> Any: ...
    def delNotifyKey(self, *args, **kwargs) -> Any: ...

class plSoftVolume(plObjInterface):
    insideStrength: Any = ...
    kListenCheck: Any = ...
    kListenDirty: Any = ...
    kListenNone: Any = ...
    kListenPosSet: Any = ...
    kListenRegistered: Any = ...
    listenState: Any = ...
    outsideStrength: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSoftVolumeComplex(plSoftVolume):
    subVolumes: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addSubVolume(self, *args, **kwargs) -> Any: ...
    def clearSubVolumes(self, *args, **kwargs) -> Any: ...
    def delSubVolume(self, *args, **kwargs) -> Any: ...

class plSoftVolumeIntersect(plSoftVolumeComplex):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSoftVolumeInvert(plSoftVolumeComplex):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSoftVolumeSimple(plSoftVolume):
    softDist: Any = ...
    volume: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSoftVolumeUnion(plSoftVolumeComplex):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSound(plSynchedObject):
    currVolume: Any = ...
    dataBuffer: Any = ...
    desiredVolume: Any = ...
    fadeInParams: Any = ...
    fadeOutParams: Any = ...
    fadedVolume: Any = ...
    innerCone: Any = ...
    isPlaying: Any = ...
    kAmbience: Any = ...
    kBackgroundMusic: Any = ...
    kGUISound: Any = ...
    kNPCVoices: Any = ...
    kPropAutoStart: Any = ...
    kPropDisableLOD: Any = ...
    kPropDontFade: Any = ...
    kPropFullyDisabled: Any = ...
    kPropIncidental: Any = ...
    kPropIs3DSound: Any = ...
    kPropLoadOnlyOnCall: Any = ...
    kPropLocalOnly: Any = ...
    kPropLooping: Any = ...
    kSoundFX: Any = ...
    maxFalloff: Any = ...
    minFalloff: Any = ...
    outerCone: Any = ...
    outerVol: Any = ...
    plFadeParams: Any = ...
    priority: Any = ...
    properties: Any = ...
    softOcclusionRegion: Any = ...
    softRegion: Any = ...
    subtitleId: Any = ...
    time: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSoundBuffer(hsKeyedObject):
    data: Any = ...
    dataLength: Any = ...
    fileName: Any = ...
    flags: Any = ...
    header: Any = ...
    kAlwaysExternal: Any = ...
    kIsExternal: Any = ...
    kOnlyLeftChannel: Any = ...
    kOnlyRightChannel: Any = ...
    kStreamCompressed: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSoundMsg(plMessageWithCallbacks):
    begin: Any = ...
    end: Any = ...
    fadeType: Any = ...
    index: Any = ...
    kAddCallbacks: Any = ...
    kClearTalkIcon: Any = ...
    kExponential: Any = ...
    kFastForwardPlay: Any = ...
    kFastForwardToggle: Any = ...
    kGetStatus: Any = ...
    kGoToTime: Any = ...
    kIsLocalOnly: Any = ...
    kLinear: Any = ...
    kLogarithmic: Any = ...
    kNumCmds: Any = ...
    kNumSounds: Any = ...
    kPlay: Any = ...
    kRemoveCallbacks: Any = ...
    kSelectFromGroup: Any = ...
    kSetBegin: Any = ...
    kSetFadeIn: Any = ...
    kSetFadeOut: Any = ...
    kSetLooping: Any = ...
    kSetTalkIcon: Any = ...
    kSetVolume: Any = ...
    kStatusReply: Any = ...
    kStop: Any = ...
    kToggleState: Any = ...
    kUnSetLooping: Any = ...
    loop: Any = ...
    playing: Any = ...
    repeats: Any = ...
    speed: Any = ...
    time: Any = ...
    volume: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def getCmd(self, *args, **kwargs) -> Any: ...
    def setCmd(self, *args, **kwargs) -> Any: ...

class plSoundVolumeApplicator(plAGApplicator):
    index: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSpaceTree(plCreatable):
    def __init__(self, *args, **kwargs) -> None: ...
    def addLeaf(self, *args, **kwargs) -> Any: ...
    def addParent(self, *args, **kwargs) -> Any: ...
    def clear(self, *args, **kwargs) -> Any: ...
    def getNode(self, *args, **kwargs) -> Any: ...
    def getRoot(self, *args, **kwargs) -> Any: ...

class plSpaceTreeNode:
    bounds: Any = ...
    flags: Any = ...
    kDirty: Any = ...
    kDisabled: Any = ...
    kEmpty: Any = ...
    kEnabledTemp: Any = ...
    kIsLeaf: Any = ...
    kNone: Any = ...
    parent: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def getChildren(self, *args, **kwargs) -> Any: ...
    def getLeafIndex(self, *args, **kwargs) -> Any: ...
    def setChildren(self, *args, **kwargs) -> Any: ...
    def setLeafIndex(self, *args, **kwargs) -> Any: ...

class plSpan:
    baseMatrix: Any = ...
    fog: Any = ...
    fogEnvironment: Any = ...
    kIcicleSpan: Any = ...
    kLiteMaterial: Any = ...
    kLiteProjection: Any = ...
    kLiteShadow: Any = ...
    kLiteShadowErase: Any = ...
    kLiteVtxNonPreshaded: Any = ...
    kLiteVtxPreshaded: Any = ...
    kNullSpan: Any = ...
    kPartialSort: Any = ...
    kParticleSet: Any = ...
    kParticleSpan: Any = ...
    kPropCharacter: Any = ...
    kPropDisableNormal: Any = ...
    kPropFacesSortable: Any = ...
    kPropForceShadow: Any = ...
    kPropHasPermaLights: Any = ...
    kPropHasPermaProjs: Any = ...
    kPropMatHasSpecular: Any = ...
    kPropNoDraw: Any = ...
    kPropNoShadow: Any = ...
    kPropNoShadowCast: Any = ...
    kPropProjAsVtx: Any = ...
    kPropReverseSort: Any = ...
    kPropRunTimeLight: Any = ...
    kPropSkipProjection: Any = ...
    kPropVolatile: Any = ...
    kSpan: Any = ...
    kVertexSpan: Any = ...
    kVisLOS: Any = ...
    kWaterHeight: Any = ...
    localBounds: Any = ...
    localToWorld: Any = ...
    localUVWChans: Any = ...
    materialIdx: Any = ...
    maxBoneIdx: Any = ...
    maxDist: Any = ...
    minDist: Any = ...
    numMatrices: Any = ...
    penBoneIdx: Any = ...
    permaLights: Any = ...
    permaProjs: Any = ...
    props: Any = ...
    subType: Any = ...
    waterHeight: Any = ...
    worldBounds: Any = ...
    worldToLocal: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def ClassName(self, *args, **kwargs) -> Any: ...
    def addPermaLight(self, *args, **kwargs) -> Any: ...
    def addPermaProj(self, *args, **kwargs) -> Any: ...
    def clearPermaLights(self, *args, **kwargs) -> Any: ...
    def clearPermaProjs(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plSpanEncoding:
    code: Any = ...
    kColA8: Any = ...
    kColAI88: Any = ...
    kColARGB8888: Any = ...
    kColI8: Any = ...
    kColMask: Any = ...
    kColNone: Any = ...
    kColRGB888: Any = ...
    kPos008: Any = ...
    kPos101010: Any = ...
    kPos161616: Any = ...
    kPos888: Any = ...
    kPosMask: Any = ...
    kPosNone: Any = ...
    posScale: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plSpanInstance:
    colors: Any = ...
    localToWorld: Any = ...
    posDeltas: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plSpanTemplate:
    format: Any = ...
    indices: Any = ...
    vertices: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plSpanTemplateVertex:
    UVWs: Any = ...
    color1: Any = ...
    color2: Any = ...
    normal: Any = ...
    position: Any = ...
    weightIdx: Any = ...
    weights: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plSpawnModifier(plMultiModifier):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSpawnPointInfo:
    cameraStack: Any = ...
    spawnPt: Any = ...
    title: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSplineEaseCurve(plATCEaseCurve):
    splineCoef: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSpotInnerApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSpotLightInfo(plOmniLightInfo):
    falloff: Any = ...
    spotInner: Any = ...
    spotOuter: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSpotOuterApplicator(plAGApplicator):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plStateDescriptor:
    name: Any = ...
    valid: Any = ...
    variables: Any = ...
    version: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def addVariable(self, *args, **kwargs) -> Any: ...
    def clearVariables(self, *args, **kwargs) -> Any: ...
    def delVariable(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __len__(self) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class plSubWorldMsg(plSimulationMsg):
    worldKey: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSubworldRegionDetector(plCollisionDetector):
    onExit: Any = ...
    subworld: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSwimCircularCurrentRegion(plSwimRegionInterface):
    currentObj: Any = ...
    pullFarDistSq: Any = ...
    pullFarVel: Any = ...
    pullNearDistSq: Any = ...
    pullNearVel: Any = ...
    rotation: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSwimDetector(plSimpleRegionSensor):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSwimMsg(plMessage):
    isEntering: Any = ...
    swimRegion: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSwimRegionInterface(plObjInterface):
    downBuoyancy: Any = ...
    kDisable: Any = ...
    maxUpwardVel: Any = ...
    upBuoyancy: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSwimStraightCurrentRegion(plSwimRegionInterface):
    currentObj: Any = ...
    farDist: Any = ...
    farVel: Any = ...
    nearDist: Any = ...
    nearVel: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plSynchedObject(hsKeyedObject):
    excludes: Any = ...
    kAllStateIsVolatile: Any = ...
    kBCastToClients: Any = ...
    kDontDirty: Any = ...
    kDontPersistOnServer: Any = ...
    kDontSynchGameMessages: Any = ...
    kExcludeAllPersistentState: Any = ...
    kExcludePersistentState: Any = ...
    kForceFullSend: Any = ...
    kHasConstantNetGroup: Any = ...
    kHasVolatileState: Any = ...
    kIsAvatarState: Any = ...
    kLocalOnly: Any = ...
    kNewState: Any = ...
    kSendImmediately: Any = ...
    kSendReliably: Any = ...
    kSkipLocalOwnershipCheck: Any = ...
    kUseRelevanceRegions: Any = ...
    synchFlags: Any = ...
    volatiles: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def setExclude(self, *args, **kwargs) -> Any: ...
    def setVolatile(self, *args, **kwargs) -> Any: ...

class plTMController(plController):
    pos: Any = ...
    rot: Any = ...
    scale: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def convertToCompoundController(self, *args, **kwargs) -> Any: ...

class plTimerCallbackMsg(plMessage):
    ID: Any = ...
    time: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plUnifiedTime:
    secs: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plVarDescriptor:
    alwaysNew: Any = ...
    count: Any = ...
    default: Any = ...
    display: Any = ...
    internal: Any = ...
    kAgeTimeElapsed: Any = ...
    kAgeTimeOfDay: Any = ...
    kBool: Any = ...
    kBuffer: Any = ...
    kByte: Any = ...
    kChar: Any = ...
    kCreatable: Any = ...
    kDouble: Any = ...
    kFloat: Any = ...
    kGameTimeElapsed: Any = ...
    kInt: Any = ...
    kKey: Any = ...
    kMatrix44: Any = ...
    kNone: Any = ...
    kPoint3: Any = ...
    kQuaternion: Any = ...
    kRGB: Any = ...
    kRGB8: Any = ...
    kRGBA: Any = ...
    kRGBA8: Any = ...
    kShort: Any = ...
    kStateDescriptor: Any = ...
    kString: Any = ...
    kTime: Any = ...
    kUint: Any = ...
    kVector3: Any = ...
    name: Any = ...
    stateDesc: Any = ...
    stateDescType: Any = ...
    type: Any = ...
    valid: Any = ...
    variableLength: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class plVault:
    kAgeDevicesFolder: Any = ...
    kAgeGlobalSDLNode: Any = ...
    kAgeInfoNode: Any = ...
    kAgeInstanceSDLNode: Any = ...
    kAgeJournalsFolder: Any = ...
    kAgeMembersFolder: Any = ...
    kAgeOwnersFolder: Any = ...
    kAgeTypeJournalFolder: Any = ...
    kAgesICanVisitFolder: Any = ...
    kAgesIOwnFolder: Any = ...
    kAllAgeGlobalSDLNodesFolder: Any = ...
    kAllPlayersFolder: Any = ...
    kAvatarClosetFolder: Any = ...
    kAvatarOutfitFolder: Any = ...
    kBuddyListFolder: Any = ...
    kCCRPlayersFolder: Any = ...
    kCanVisitFolder: Any = ...
    kChildAgesFolder: Any = ...
    kChronicleFolder: Any = ...
    kDefaultPermissions: Any = ...
    kDeviceInboxFolder: Any = ...
    kGameScoresFolder: Any = ...
    kGlobalInboxFolder: Any = ...
    kGroupRead: Any = ...
    kGroupWrite: Any = ...
    kHoodMembersFolder: Any = ...
    kInboxFolder: Any = ...
    kIngoreListFolder: Any = ...
    kJPEG: Any = ...
    kLastStandardNode: Any = ...
    kNodeAdmin: Any = ...
    kNodeAge: Any = ...
    kNodeAgeInfo: Any = ...
    kNodeAgeInfoList: Any = ...
    kNodeAgeLink: Any = ...
    kNodeCCR: Any = ...
    kNodeChronicle: Any = ...
    kNodeFolder: Any = ...
    kNodeGameServer: Any = ...
    kNodeImage: Any = ...
    kNodeInvalid: Any = ...
    kNodeMarker: Any = ...
    kNodeMarkerList: Any = ...
    kNodeNumTypes: Any = ...
    kNodePlayer: Any = ...
    kNodePlayerInfo: Any = ...
    kNodePlayerInfoList: Any = ...
    kNodeSDL: Any = ...
    kNodeSystem: Any = ...
    kNodeTextNote: Any = ...
    kNodeUNUSED: Any = ...
    kNodeVNodeMgrHigh: Any = ...
    kNodeVNodeMgrLow: Any = ...
    kNodeVaultServer: Any = ...
    kNone: Any = ...
    kNoteCCRPetition: Any = ...
    kNoteDevice: Any = ...
    kNoteGeneric: Any = ...
    kNoteInvite: Any = ...
    kNoteUnVisit: Any = ...
    kNoteVisit: Any = ...
    kNumNoteTypes: Any = ...
    kOtherRead: Any = ...
    kOtherWrite: Any = ...
    kOwnerRead: Any = ...
    kOwnerWrite: Any = ...
    kPNG: Any = ...
    kPeopleIKnowAboutFolder: Any = ...
    kPlayerInfoNode: Any = ...
    kPlayerInviteFolder: Any = ...
    kPublicAgesFolder: Any = ...
    kSubAgesFolder: Any = ...
    kSystemNode: Any = ...
    kUserDefinedNode: Any = ...
    kVaultMgrGlobalDataFolder: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultAdminNode(plVaultNode):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultAgeInfoListNode(plVaultFolderNode):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultAgeInfoNode(plVaultNode):
    ageCzarID: Any = ...
    ageDescription: Any = ...
    ageFilename: Any = ...
    ageID: Any = ...
    ageInfoFlags: Any = ...
    ageInstanceGuid: Any = ...
    ageInstanceName: Any = ...
    ageLanguage: Any = ...
    ageSequenceNumber: Any = ...
    isPublic: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultAgeLinkNode(plVaultNode):
    spawnPoints: Any = ...
    unlocked: Any = ...
    volatile: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultAgeNode(plVaultNode):
    ageInstanceGuid: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultChronicleNode(plVaultNode):
    entryName: Any = ...
    entryType: Any = ...
    entryValue: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultFolderNode(plVaultNode):
    folderName: Any = ...
    folderType: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultGameServerNode(plVaultNode):
    ageFilename: Any = ...
    ageInstanceGuid: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultImageNode(plVaultNode):
    imageData: Any = ...
    imageTitle: Any = ...
    imageType: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultMarkerListNode(plVaultNode):
    ageName: Any = ...
    authorID: Any = ...
    authorName: Any = ...
    gameTitle: Any = ...
    gameType: Any = ...
    roundLength: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultMarkerNode(plVaultNode):
    ageName: Any = ...
    hSpans: Any = ...
    markerPosX: Any = ...
    markerPosY: Any = ...
    markerPosZ: Any = ...
    markerText: Any = ...
    torans: Any = ...
    vSpans: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultNode:
    autoTime: Any = ...
    blob_1: Any = ...
    blob_2: Any = ...
    createAgeGuid: Any = ...
    createAgeName: Any = ...
    createAgeTime: Any = ...
    creator: Any = ...
    group: Any = ...
    guid1: Any = ...
    guid2: Any = ...
    int32_1: Any = ...
    int32_2: Any = ...
    int32_3: Any = ...
    int32_4: Any = ...
    isValid: Any = ...
    istring64_1: Any = ...
    istring64_2: Any = ...
    modifyTime: Any = ...
    nodeID: Any = ...
    nodeType: Any = ...
    permissions: Any = ...
    string64_1: Any = ...
    string64_2: Any = ...
    string64_3: Any = ...
    string64_4: Any = ...
    string64_5: Any = ...
    string64_6: Any = ...
    text_1: Any = ...
    text_2: Any = ...
    uint32_1: Any = ...
    uint32_2: Any = ...
    uint32_3: Any = ...
    uint32_4: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def delField(self, *args, **kwargs) -> Any: ...
    def hasField(self, *args, **kwargs) -> Any: ...

class plVaultPlayerInfoListNode(plVaultFolderNode):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultPlayerInfoNode(plVaultNode):
    ageInstGuid: Any = ...
    ageInstName: Any = ...
    online: Any = ...
    playerID: Any = ...
    playerName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultPlayerNode(plVaultNode):
    accountUuid: Any = ...
    avatarShape: Any = ...
    disabled: Any = ...
    explorer: Any = ...
    onlineTime: Any = ...
    playerName: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultSDLNode(plVaultNode):
    sdlData: Any = ...
    sdlIdent: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultServerNode(plVaultNode):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultStore:
    firstNodeID: Any = ...
    lastNodeID: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def Export(self, *args, **kwargs) -> Any: ...
    def Import(self, *args, **kwargs) -> Any: ...
    def addNode(self, *args, **kwargs) -> Any: ...
    def addRef(self, *args, **kwargs) -> Any: ...
    def delRef(self, *args, **kwargs) -> Any: ...
    def findParents(self, *args, **kwargs) -> Any: ...
    def getChildren(self, *args, **kwargs) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...

class plVaultSystemNode(plVaultNode):
    ccrStatus: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVaultTextNoteNode(plVaultNode):
    noteContents: Any = ...
    noteSubType: Any = ...
    noteTitle: Any = ...
    noteType: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVertexSpan(plSpan):
    VBufferIdx: Any = ...
    VLength: Any = ...
    VStartIdx: Any = ...
    cellIdx: Any = ...
    cellOffset: Any = ...
    groupIdx: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plViewFaceModifier(plSingleModifier):
    faceObj: Any = ...
    kFaceCam: Any = ...
    kFaceList: Any = ...
    kFaceObj: Any = ...
    kFacePlay: Any = ...
    kMaxBounds: Any = ...
    kOffset: Any = ...
    kOffsetLocal: Any = ...
    kPivotFace: Any = ...
    kPivotFavorY: Any = ...
    kPivotTumple: Any = ...
    kPivotY: Any = ...
    kScale: Any = ...
    localToParent: Any = ...
    maxBounds: Any = ...
    offset: Any = ...
    parentToLocal: Any = ...
    scale: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVisRegion(plObjInterface):
    kDisable: Any = ...
    kDisableNormal: Any = ...
    kIsNot: Any = ...
    kReplaceNormal: Any = ...
    region: Any = ...
    visMgr: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVolActivatorConditionalObject(plActivatorConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVolumeIsect(plCreatable):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVolumeSensorConditionalObject(plConditionalObject):
    first: Any = ...
    kTypeEnter: Any = ...
    kTypeExit: Any = ...
    trigNum: Any = ...
    type: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plVolumeSensorConditionalObjectNoArbitration(plVolumeSensorConditionalObject):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plWAVHeader:
    avgBytesPerSec: Any = ...
    bitsPerSample: Any = ...
    blockAlign: Any = ...
    formatTag: Any = ...
    kPCMFormatTag: Any = ...
    numChannels: Any = ...
    samplesPerSec: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class plWarpMsg(plMessage):
    kFlushTransform: Any = ...
    kZeroVelocity: Any = ...
    transform: Any = ...
    warpFlags: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plWaveSet7(plWaveSetBase):
    decals: Any = ...
    envMap: Any = ...
    kHasRefObject: Any = ...
    maxLen: Any = ...
    refObj: Any = ...
    shores: Any = ...
    state: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addDecal(self, *args, **kwargs) -> Any: ...
    def addShore(self, *args, **kwargs) -> Any: ...
    def clearDecals(self, *args, **kwargs) -> Any: ...
    def clearShores(self, *args, **kwargs) -> Any: ...
    def delDecal(self, *args, **kwargs) -> Any: ...
    def delShore(self, *args, **kwargs) -> Any: ...

class plWaveSetBase(plMultiModifier):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plWin32Sound(plSound):
    channel: Any = ...
    kLeftChannel: Any = ...
    kRightChannel: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plWin32StaticSound(plWin32Sound):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plWin32StreamingSound(plWin32Sound):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class plWinAudible(plAudible):
    sceneNode: Any = ...
    sounds: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def addSound(self, *args, **kwargs) -> Any: ...
    def clearSounds(self, *args, **kwargs) -> Any: ...
    def delSound(self, *args, **kwargs) -> Any: ...

class proActivateEventData(proEventData):
    activate: Any = ...
    active: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proBookEventData(proEventData):
    event: Any = ...
    linkID: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proCallbackEventData(proEventData):
    callbackEventType: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proClickDragEventData(proEventData):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proClimbingBlockerHitEventData(proEventData):
    blocker: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proCollisionEventData(proEventData):
    enter: Any = ...
    hittee: Any = ...
    hitter: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proContainedEventData(proEventData):
    contained: Any = ...
    container: Any = ...
    entering: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proControlKeyEventData(proEventData):
    controlKey: Any = ...
    down: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proCoopEventData(proEventData):
    id: Any = ...
    serial: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proEventData:
    kActivate: Any = ...
    kAdvanceNextStage: Any = ...
    kBeginningOfLoop: Any = ...
    kBook: Any = ...
    kCallback: Any = ...
    kClickDrag: Any = ...
    kClimbingBlockerHit: Any = ...
    kCollision: Any = ...
    kContained: Any = ...
    kControlKey: Any = ...
    kCoop: Any = ...
    kEnterStage: Any = ...
    kFacing: Any = ...
    kKey: Any = ...
    kMultiStage: Any = ...
    kNone: Any = ...
    kNothing: Any = ...
    kNotta: Any = ...
    kNumber: Any = ...
    kOfferLinkBook: Any = ...
    kPicked: Any = ...
    kRegressPrevStage: Any = ...
    kResponderState: Any = ...
    kSpawned: Any = ...
    kVariable: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def EventType(self, *args, **kwargs) -> Any: ...
    def Read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...

class proFacingEventData(proEventData):
    dot: Any = ...
    enabled: Any = ...
    facee: Any = ...
    facer: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proMultiStageEventData(proEventData):
    avatar: Any = ...
    event: Any = ...
    stage: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proOfferLinkBookEventData(proEventData):
    offeree: Any = ...
    offerer: Any = ...
    targetAge: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proPickedEventData(proEventData):
    enabled: Any = ...
    hitPoint: Any = ...
    picked: Any = ...
    picker: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proResponderStateEventData(proEventData):
    state: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proSpawnedEventData(proEventData):
    spawnee: Any = ...
    spawner: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...

class proVariableEventData(proEventData):
    dataType: Any = ...
    key: Any = ...
    name: Any = ...
    number: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
